{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/operators/operator-create/operator-create.component.css","webpack:///./src/app/operators/operator-create/operator-create.component.html","webpack:///./src/app/operators/operator-create/operator-create.component.ts","webpack:///./src/app/operators/operator-delete/operator-delete.component.css","webpack:///./src/app/operators/operator-delete/operator-delete.component.html","webpack:///./src/app/operators/operator-delete/operator-delete.component.ts","webpack:///./src/app/operators/operator-detail/operator-detail.component.css","webpack:///./src/app/operators/operator-detail/operator-detail.component.html","webpack:///./src/app/operators/operator-detail/operator-detail.component.ts","webpack:///./src/app/operators/operator-edit/operator-edit.component.css","webpack:///./src/app/operators/operator-edit/operator-edit.component.html","webpack:///./src/app/operators/operator-edit/operator-edit.component.ts","webpack:///./src/app/operators/operator.model.ts","webpack:///./src/app/operators/operators.component.css","webpack:///./src/app/operators/operators.component.html","webpack:///./src/app/operators/operators.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/seasons/season-create/season-create.component.css","webpack:///./src/app/seasons/season-create/season-create.component.html","webpack:///./src/app/seasons/season-create/season-create.component.ts","webpack:///./src/app/seasons/season-delete/season-delete.component.css","webpack:///./src/app/seasons/season-delete/season-delete.component.html","webpack:///./src/app/seasons/season-delete/season-delete.component.ts","webpack:///./src/app/seasons/season-detail/season-detail.component.css","webpack:///./src/app/seasons/season-detail/season-detail.component.html","webpack:///./src/app/seasons/season-detail/season-detail.component.ts","webpack:///./src/app/seasons/season-edit/season-edit.component.css","webpack:///./src/app/seasons/season-edit/season-edit.component.html","webpack:///./src/app/seasons/season-edit/season-edit.component.ts","webpack:///./src/app/seasons/season-populate/season-populate.component.css","webpack:///./src/app/seasons/season-populate/season-populate.component.html","webpack:///./src/app/seasons/season-populate/season-populate.component.ts","webpack:///./src/app/seasons/season.model.ts","webpack:///./src/app/seasons/seasons.component.css","webpack:///./src/app/seasons/seasons.component.html","webpack:///./src/app/seasons/seasons.component.ts","webpack:///./src/app/siege.service.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/user-delete/user-delete.component.css","webpack:///./src/app/user-delete/user-delete.component.html","webpack:///./src/app/user-delete/user-delete.component.ts","webpack:///./src/app/worlds/world-create/world-create.component.css","webpack:///./src/app/worlds/world-create/world-create.component.html","webpack:///./src/app/worlds/world-create/world-create.component.ts","webpack:///./src/app/worlds/world-delete/world-delete.component.css","webpack:///./src/app/worlds/world-delete/world-delete.component.html","webpack:///./src/app/worlds/world-delete/world-delete.component.ts","webpack:///./src/app/worlds/world-detail/world-detail.component.css","webpack:///./src/app/worlds/world-detail/world-detail.component.html","webpack:///./src/app/worlds/world-detail/world-detail.component.ts","webpack:///./src/app/worlds/world-edit/world-edit.component.css","webpack:///./src/app/worlds/world-edit/world-edit.component.html","webpack:///./src/app/worlds/world-edit/world-edit.component.ts","webpack:///./src/app/worlds/world.model.ts","webpack:///./src/app/worlds/worlds.component.css","webpack:///./src/app/worlds/worlds.component.html","webpack:///./src/app/worlds/worlds.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WorldsComponent } from './worlds/worlds.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SeasonsComponent } from './seasons/seasons.component';\r\nimport { OperatorsComponent } from './operators/operators.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { AuthService } from './auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SeasonDetailComponent } from './seasons/season-detail/season-detail.component';\r\nimport { OperatorDetailComponent } from './operators/operator-detail/operator-detail.component';\r\nimport { WorldDetailComponent } from './worlds/world-detail/world-detail.component';\r\nimport { SeasonCreateComponent } from './seasons/season-create/season-create.component';\r\nimport { WorldCreateComponent } from './worlds/world-create/world-create.component';\r\nimport { OperatorCreateComponent } from './operators/operator-create/operator-create.component';\r\nimport { OperatorDeleteComponent } from './operators/operator-delete/operator-delete.component';\r\nimport { SeasonDeleteComponent } from './seasons/season-delete/season-delete.component';\r\nimport { WorldDeleteComponent } from './worlds/world-delete/world-delete.component';\r\nimport { SeasonEditComponent } from './seasons/season-edit/season-edit.component';\r\nimport { UserDeleteComponent } from './user-delete/user-delete.component';\r\nimport { OperatorEditComponent } from './operators/operator-edit/operator-edit.component';\r\nimport { WorldEditComponent } from './worlds/world-edit/world-edit.component';\r\nimport { SeasonPopulateComponent } from './seasons/season-populate/season-populate.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: HomeComponent\r\n  },\r\n  //LIST VIEW ROUTES\r\n  {\r\n    path:'operators',\r\n    component: OperatorsComponent\r\n  },\r\n  {\r\n    path:'maps',\r\n    component: WorldsComponent\r\n  },\r\n  {\r\n    path:'operations',\r\n    component: SeasonsComponent\r\n  },\r\n  // AUTHENTICATION ROUTES\r\n  {\r\n    path:'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path:'deleteUser',\r\n    component: UserDeleteComponent\r\n  },\r\n  //SEASON ROUTES\r\n  {\r\n    path:'operations/create',\r\n    component: SeasonCreateComponent,\r\n  },\r\n  {\r\n    path:'operations/delete',\r\n    component:SeasonDeleteComponent\r\n  },\r\n  {\r\n    path: 'operations/edit',\r\n    component: SeasonEditComponent\r\n  },\r\n  {\r\n    path: 'operations/populate',\r\n    component: SeasonPopulateComponent\r\n  },\r\n  //WORLD ROUTES\r\n  {\r\n    path:'maps/create',\r\n    component: WorldCreateComponent\r\n  },\r\n  {\r\n    path:'maps/delete',\r\n    component: WorldDeleteComponent\r\n  },\r\n  {\r\n    path:'maps/edit',\r\n    component: WorldEditComponent\r\n  },\r\n  //OPERATOR ROUTES\r\n  {\r\n    path:'operators/create',\r\n    component: OperatorCreateComponent\r\n  },\r\n  { path: 'operators/delete',\r\n    component: OperatorDeleteComponent\r\n  },\r\n  {\r\n    path: 'operators/edit',\r\n    component: OperatorEditComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">R6SW</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/operators\\\" routerlinkActive=\\\"active\\\">Operators</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/maps\\\" routerlinkActive=\\\"active\\\">Maps</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/operations\\\" routerlinkActive=\\\"active\\\">Operations</a>\\r\\n    </li>\\r\\n</ul>\\r\\n<ul class=\\\"navbar-nav navbar-right\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" (click)=\\\"_authService.logoutUser()\\\">Logout</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/deleteUser\\\" routerLinkActive=\\\"active\\\" >Delete User</a>\\r\\n  </li>\\r\\n</ul>\\r\\n  </div>\\r\\n</nav>    \\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>            \\r\\n</div>\"","import { Component } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Rainbow Six Siege Wiki';\n\n  constructor(private _authService: AuthService){\n    \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SeasonsComponent } from './seasons/seasons.component';\r\nimport { SeasonDetailComponent } from './seasons/season-detail/season-detail.component';\r\nimport { SeasonEditComponent } from './seasons/season-edit/season-edit.component';\r\nimport { SeasonDeleteComponent } from './seasons/season-delete/season-delete.component';\r\nimport { OperatorsComponent } from './operators/operators.component';\r\nimport { OperatorEditComponent } from './operators/operator-edit/operator-edit.component';\r\nimport { OperatorDetailComponent } from './operators/operator-detail/operator-detail.component';\r\nimport { OperatorDeleteComponent } from './operators/operator-delete/operator-delete.component';\r\nimport { WorldsComponent } from './worlds/worlds.component';\r\nimport { WorldEditComponent } from './worlds/world-edit/world-edit.component';\r\nimport { WorldDetailComponent } from './worlds/world-detail/world-detail.component';\r\nimport { WorldDeleteComponent } from './worlds/world-delete/world-delete.component';;\r\nimport { UserDeleteComponent } from './user-delete/user-delete.component';\r\nimport { Http, Response, HttpModule } from '@angular/http';\r\nimport { FormsModule, FormGroup, FormBuilder, Validators, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS} from  '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { SiegeService } from './siege.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { TokenInterceptorService } from './token-interceptor.service';\r\nimport { SeasonCreateComponent } from './seasons/season-create/season-create.component';\r\nimport { WorldCreateComponent } from './worlds/world-create/world-create.component';\r\nimport { OperatorCreateComponent } from './operators/operator-create/operator-create.component';\r\nimport { SeasonPopulateComponent } from './seasons/season-populate/season-populate.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n\r\n  declarations: [\r\n    AppComponent,\r\n    SeasonsComponent,\r\n    SeasonDetailComponent,\r\n    SeasonEditComponent,\r\n    SeasonDeleteComponent,\r\n    OperatorsComponent,\r\n    OperatorEditComponent,\r\n    OperatorDetailComponent,\r\n    OperatorDeleteComponent,\r\n    WorldsComponent,\r\n    WorldEditComponent,\r\n    WorldDetailComponent,\r\n    WorldDeleteComponent,\r\n    SeasonDeleteComponent,\r\n    UserDeleteComponent,    \r\n    RegisterComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    SeasonCreateComponent,\r\n    WorldCreateComponent,\r\n    OperatorCreateComponent,\r\n    SeasonPopulateComponent,\r\n    \r\n   \r\n  ],  \r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    \r\n\r\n  ],\r\n  providers: [ AppComponent, AuthService, AuthGuard, SiegeService, OperatorsComponent,\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptorService,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _authService: AuthService,\n    private _router: Router) { }\n\n    canActivate(): boolean {\n      if (this._authService.loggedIn()) {\n        console.log('true')\n        return true\n      } else {\n        console.log('false')\n        this._router.navigate(['/login'])\n        return false\n      }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  private _registerUrl = environment.serverUrl + \"/api/user/register\"\n  private _loginUrl = environment.serverUrl + \"/api/user/login\";\n  constructor(private http: HttpClient, private _router: Router) { }\n\n  registerUser(user) {\n    return this.http.post<any>(this._registerUrl, user)\n  }\n\n  loginUser(user) {\n    return this.http.post<any>(this._loginUrl, user)\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token')\n  }\n\n  getToken() {\n    return localStorage.getItem('token')\n  }\n\n  logoutUser() {\n    localStorage.removeItem('token')\n    this._router.navigate(['/operations'])\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class='card mt-5'>\\r\\n    <div class='card-header text-center'>\\r\\n        <h1>Operations:</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    <app-seasons></app-seasons>\\r\\n\\r\\n\\r\\n<div class='card mt-5'>\\r\\n    <div class='card-header text-center'>\\r\\n        <h1>Operators:</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-operators></app-operators>\\r\\n\\r\\n<div class='card mt-5'>\\r\\n    <div class='card-header text-center'>\\r\\n        <h1>Maps:</h1>\\r\\n    </div>\\r\\n</div>\\r\\n<app-worlds></app-worlds>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\n\\n      <!-- form card login -->\\n      <div class=\\\"card rounded-0\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3 class=\\\"mb-0\\\">Login</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form class=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name1\\\">name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.name\\\" name=\\\"name\\\" required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" required>\\n            </div>\\n            <button type=\\\"button\\\" (click)=\\\"loginUser()\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\n          </form>\\n        </div>\\n        <!--/card-block-->\\n      </div>\\n      <!-- /form card login -->\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData = {\n    name:String,\n    password:String\n  }\n  constructor(private _auth: AuthService,\n    private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    this._auth.loginUser(this.loginUserData)\n    .subscribe(\n      res => {\n        localStorage.setItem('token', res.token)\n        this._router.navigate(['/operations'])\n      },\n      err => {\n      if(err instanceof HttpErrorResponse) {\n        if (err.status === 500){\n          this._router.navigate(['/login'])\n        }\n\n      }\n    }\n    )\n  }\n\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1jcmVhdGUvb3BlcmF0b3ItY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\n    <div class=\\\"card-heading text-center\\\">\\n      Create New Operator\\n      <hr/>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name3\\\">Operator name:</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"operatorCreateForm.name\\\" name=\\\"operatorName\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Description: </label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"operatorCreateForm.description\\\" name=\\\"operatorDescription\\\" class=\\\"form-control rounded-0\\\"  required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Side: </label>\\n              <select id=\\\"OperatorSelector\\\" [(ngModel)]=\\\"operatorCreateForm.side\\\" name=\\\"side\\\" style=\\\"width: 100%;\\\" class=\\\"dropdownoperator\\\" >\\n                  <option >Attacker</option>\\n                  <option >Defender</option>\\n                  </select>\\n          </div>\\n            \\n          <button type=\\\"button\\\" (click)=\\\"addOperator()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\n        </form>\\n      </div>\\n    \\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SiegeService } from '../../siege.service';\nimport { Character } from '../operator.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-operator-create',\n  templateUrl: './operator-create.component.html',\n  styleUrls: ['./operator-create.component.css']\n})\nexport class OperatorCreateComponent implements OnInit {\n\n  operatorCreateForm = {\n    name: String,\n    description: String,\n    side: String\n  }\n\n  constructor(private _siegeService : SiegeService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  addOperator() {\n    this._siegeService.addOperator(this.operatorCreateForm)\n    .subscribe(\n      res => {\n        this._router.navigate(['/operators'])\n        console.log(res)\n      },\n      err => {\n        if (err instanceof HttpErrorResponse) {\n          if( err.status === 401) {\n            this._router.navigate(['/login'])\n          }\n        }\n      }\n    )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1kZWxldGUvb3BlcmF0b3ItZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\n  \\n  <div class=\\\"card-body text-center\\\">\\n     <h3>Weet je zeker dat je deze operator wilt verwijderen?</h3>\\n     <br/>\\n     <button type=\\\"button\\\"\\t(click)=\\\"deleteOperator()\\\" class=\\\"btn btn-danger createbutton\\\">Verwijder Operator</button>\\n    </div>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operator-delete',\n  templateUrl: './operator-delete.component.html',\n  styleUrls: ['./operator-delete.component.css']\n})\nexport class OperatorDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1kZXRhaWwvb3BlcmF0b3ItZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-operator-edit [operator]=\\\"selectedOperator\\\"></app-operator-edit>\\n<div *ngIf=\\\"operator\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">\\n                Detailed Information about {{operator.name | uppercase}}\\n              </h5>\\n              <hr/>\\n              <p class=\\\"card-text\\\">\\n\\n                <b>Name:</b> \\n                <br/>\\n                {{operator.name}}\\n                <br/>\\n                <b>Description:</b> \\n                <br/>\\n                {{operator.description}}\\n                <br/>\\n                <b>Side:</b>\\n                <br/>\\n                {{operator.side}}\\n                <br/>\\n                <b>season: </b>\\n                <br/>\\n                {{operator.season}}\\n                <br/>\\n              </p>\\n        </div> <div>\\n                <a *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"onSelect(operator)\\\" class=\\\"btn btn-warning editbutton\\\">Edit</a> \\n                <a *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"deleteOperator()\\\" class=\\\"btn btn-danger deletebutton\\\">Delete</a> \\n        </div>            \\n        \\n    </div>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SiegeService } from '../../siege.service';\nimport { Character } from '../operator.model';\nimport { AuthService } from 'src/app/auth.service';\nimport { OperatorsComponent } from '../operators.component';\n\n@Component({\n  selector: 'app-operator-detail',\n  templateUrl: './operator-detail.component.html',\n  styleUrls: ['./operator-detail.component.css']\n})\nexport class OperatorDetailComponent implements OnInit {\n\n  @Input() operator: Character\n  selectedOperator: Character;\n\n  constructor(private _siegeService: SiegeService, private _authService: AuthService, private _operatorComp : OperatorsComponent) { }\n\n  ngOnInit() {\n  }\n\n  onSelect(operator:Character) : void {\n    this.selectedOperator = operator\n  }\n\n  deleteOperator() {\n    this._siegeService.deleteOperator(this.operator.name)\n    .subscribe(\n      res => {\n        this._operatorComp.refreshOperators();\n        console.log(res)\n      },\n      err => console.log(err)\n    )\n      \n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1lZGl0L29wZXJhdG9yLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"operator\\\">\\n  <div class=\\\"card mt-5 mb-5\\\">\\n    <div class=\\\"card-heading text-center\\\">\\n      Edit {{operator.name}}\\n      <hr />\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Operator name:</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"newOperatorName\\\" name=\\\"newName\\\" class=\\\"form-control rounded-0\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Description: </label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"newOperatorDesc\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Side: </label>\\n          <select id=\\\"OperatorSelector\\\" [(ngModel)]=\\\"newOperatorSide\\\" name=\\\"side\\\" style=\\\"width: 100%;\\\" class=\\\"dropdownoperator\\\">\\n            <option>Attacker</option>\\n            <option>Defender</option>\\n          </select>\\n        </div>\\n        <button type=\\\"button\\\" (click)=\\\"editOperator()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\n      </form>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Character } from '../operator.model';\nimport { Season } from '../../seasons/season.model';\nimport { SiegeService } from '../../siege.service';\nimport { AuthService } from 'src/app/auth.service';\nimport { OperatorsComponent } from '../operators.component';\n\n@Component({\n  selector: 'app-operator-edit',\n  templateUrl: './operator-edit.component.html',\n  styleUrls: ['./operator-edit.component.css']\n})\nexport class OperatorEditComponent implements OnInit {\n\n  seasons = [];\n\n  @Input() operator: Character;\n  operatorEdit;\n  newOperatorName = '';\n  newOperatorDesc = '';\n  newOperatorSide = '';\n\n\n  // operator = {\n\n  //   name: String,\n  //   description: String,\n  //   side: String,\n  //   operator: Character\n    \n  // }\n\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _operatorComp : OperatorsComponent) { }\n\n  ngOnInit() {\n    return this._siegeService.getSeasons()\n    .subscribe(\n      res => this.seasons = res,\n      err => console.log(err)\n    )\n  }\n\n  editOperator() {\n    if (this._authService.loggedIn) {\n    this.operatorEdit = new Character(this.operator.name, this.newOperatorName, this.newOperatorDesc, this.newOperatorSide)\n    this._siegeService.editOperator(this.operatorEdit)\n    .subscribe(\n      res => {\n        this._operatorComp.refreshOperators();\n        console.log(res)},\n      err => console.log(err)\n    )}\n    }\n\n}\n","export class Character {\r\n    constructor( public _id?: String, public name?: String, public newName?: String, public description?: String, public side?: String){}\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card mt-5\\\"  *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n      <a class=\\\"btn btn-success createbutton\\\"  routerLink = \\\"/operators/create\\\">Niewe Operator aanmaken</a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-5\\\">\\r\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let operator of operators\\\">\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          {{operator.name}}\\r\\n        </h5>\\r\\n        <p class=\\\"card-text\\\">\\r\\n          {{operator.side}}\\r\\n        </p>\\r\\n        <a (click)=\\\"onSelect(operator)\\\" class=\\\"btn btn-primary\\\">Meer Informatie</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-operator-detail [operator]=\\\"selectedOperator\\\"></app-operator-detail>\"","import { Component, OnInit } from '@angular/core';\nimport { SiegeService } from '../siege.service';\nimport { Character } from './operator.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-operators',\n  templateUrl: './operators.component.html',\n  styleUrls: ['./operators.component.css']\n})\nexport class OperatorsComponent implements OnInit {\n\n  operators = []\n  selectedOperator: Character;\n\n  constructor(private _siegeService: SiegeService, private _authService: AuthService) { }\n\n  ngOnInit() {\n    return this._siegeService.getOperators()\n    .subscribe(\n      res => this.operators = res,\n      err => console.log(err)\n    )\n  }\n\n  onSelect(operator:Character) : void {\n    this.selectedOperator = operator\n  }\n\n  refreshOperators() {\n    return this._siegeService.getOperators()\n    .subscribe(\n      res => this.operators = res,\n      err => console.log(err)\n    )\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\n\\n      <!-- form card login -->\\n      <div class=\\\"card rounded-0\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3 class=\\\"mb-0\\\">Register</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form class=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name1\\\">Name</label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Password</label>\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"registerUserData.password\\\" name=\\\"password\\\" class=\\\"form-control rounded-0\\\"  required>\\n            </div>\\n            <button type=\\\"button\\\" (click)=\\\"registerUser()\\\" class=\\\"btn btn-primary float-right\\\">Register</button>\\n          </form>\\n        </div>\\n        <!--/card-block-->\\n      </div>\\n      <!-- /form card login -->\\n\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData = {\n    name:String,\n    password: String\n  }\n\n  constructor(private _auth: AuthService,\n    private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    this._auth.registerUser(this.registerUserData)\n    .subscribe(\n      res => {\n        localStorage.setItem('token', res.token)\n        this._router.navigate(['/operations'])\n      },\n      err => {\n        if(err instanceof HttpErrorResponse) {\n          if (err.status === 401){\n            this._router.navigate(['/login'])\n          }\n\n        }\n      }\n    )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWNyZWF0ZS9zZWFzb24tY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\n  <div class=\\\"card-heading text-center\\\">\\n    Create New Operation\\n    <hr />\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form class=\\\"form\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name2\\\">Operation name:</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"seasonCreate.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Description: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"seasonCreate.description\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"\\n          required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Year: </label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"seasonCreate.year\\\" name=\\\"year\\\" class=\\\"form-control rounded-0\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Season: </label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"seasonCreate.season\\\" name=\\\"season\\\" class=\\\"form-control rounded-0\\\" required>\\n      </div>\\n      <button type=\\\"button\\\" (click)=\\\"addSeason()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\n    </form>\\n  </div>\\n\\n</div>\\n\\n\\n\\n\\n<!-- <div class=\\\"card-body\\\">\\n      <form [formGroup] = \\\"seasonCreate\\\" (ngSubmit)=\\\"addSeason()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">\\n            Operation Name:\\n          </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">\\n            Description:\\n          </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">\\n            Year:\\n          </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">\\n            Season:\\n          </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"season\\\" />\\n        </div>\\n  \\n        <button type=\\\"submit\\\">Submit</button>\\n      </form>\\n    </div> -->\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Season } from '../season.model';\nimport { SiegeService } from '../../siege.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { World } from 'src/app/worlds/world.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-season-create',\n  templateUrl: './season-create.component.html',\n  styleUrls: ['./season-create.component.css']\n})\nexport class SeasonCreateComponent implements OnInit {\n\n  title = 'Create Season';\n\n  \n  seasonCreate = {\n    name:String,\n    description: String,\n    year: Number,\n    season: Number\n    \n  }\n  \n\n  constructor(private _siegeService:SiegeService, private _router: Router)  { }\n\n  ngOnInit() {\n  }\n\n  addSeason() {\n    this._siegeService.addSeason(this.seasonCreate)\n     .subscribe(\n       res => {\n         this._router.navigate(['/operations'])\n         console.log(res) \n       },\n       err => {\n         console.log(err)\n       }\n     )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWRlbGV0ZS9zZWFzb24tZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\n  \\n  <div class=\\\"card-body text-center\\\">\\n     <h3>Weet je zeker dat je deze operation wilt verwijderen?</h3>\\n     <br/>\\n     <button type=\\\"button\\\"\\t(click)=\\\"deleteSeason()\\\" class=\\\"btn btn-danger createbutton\\\">Verwijder Operation</button>\\n    </div>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Season } from '../season.model';\nimport { SiegeService } from 'src/app/siege.service';\nimport { SeasonsComponent } from '../seasons.component';\nimport { Character } from 'src/app/operators/operator.model';\nimport { World } from 'src/app/worlds/world.model';\n\n@Component({\n  selector: 'app-season-delete',\n  templateUrl: './season-delete.component.html',\n  styleUrls: ['./season-delete.component.css']\n})\nexport class SeasonDeleteComponent implements OnInit {\n\n  \n\n  constructor(private _siegeService : SiegeService) { }\n\n  ngOnInit() {\n  }\n\n  \n   \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWRldGFpbC9zZWFzb24tZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-season-edit [season]=\\\"selectedSeason\\\"></app-season-edit>\\n\\n<div *ngIf=\\\"season\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">\\n                Detailed Information about {{season.name | uppercase}}\\n              </h5>\\n              <hr/>\\n              <p class=\\\"card-text\\\">\\n\\n                <b>Name:</b> \\n                <br/>\\n                {{season.name}}\\n                <br/>\\n                <b>Description:</b> \\n                <br/>\\n                {{season.description}}\\n                <br/>\\n                <b>Year: </b>\\n                <br/>\\n                {{season.year}}\\n                <br/>\\n                <b>Season: </b>\\n                <br/>\\n                {{season.season}}\\n                <br/>                \\n              </p>\\n              <div *ngIf=\\\"operator\\\">\\n                    {{operator.name}}\\n              </div>\\n              <div *ngIf=\\\"world\\\">\\n                    {{world.name}}\\n              </div>\\n              </div>\\n              <div>\\n                    <a *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"onSelect(season)\\\"class=\\\"btn btn-warning editbutton\\\">Edit</a> \\n                   \\n                    <a *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"deleteSeason()\\\"class=\\\"btn btn-danger editbutton\\\">Delete</a>\\n\\n            </div>   \\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SiegeService } from '../../siege.service';\nimport { Season } from '../season.model';\nimport { AuthService } from '../../auth.service';\nimport { Character } from 'src/app/operators/operator.model';\nimport { World } from 'src/app/worlds/world.model';\nimport { SeasonsComponent } from '../seasons.component';\nimport { OperatorsComponent } from 'src/app/operators/operators.component';\n\n@Component({\n  selector: 'app-season-detail',\n  templateUrl: './season-detail.component.html',\n  styleUrls: ['./season-detail.component.css']\n})\nexport class SeasonDetailComponent implements OnInit {\n\n  @Input() season: Season \n  selectedSeason: Season\n  popSeason: Season\n\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _seasonsComp: SeasonsComponent, private _seasonComp: SeasonsComponent) { }\n\n  ngOnInit() {\n  }\n\n  onSelect(season:Season) : void {\n    this.selectedSeason = season;\n  }\n  onPopulate(season:Season) : void {\n    this.popSeason = season;\n  }\n  deleteSeason() {\n    console.log(this.season.name)\n    this._siegeService.deleteSeason(this.season.name)\n    .subscribe (\n      res => {\n        this._seasonComp.refreshSeasons();\n        console.log(res)\n      },\n      err => console.log (err)\n      \n    )\n  }\n    \n    }\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWVkaXQvc2Vhc29uLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<div *ngIf=\\\"season\\\">\\n    <div class=\\\"card mt-5 mb-5\\\">\\n        <div class=\\\"card-heading text-center\\\">\\n          Edit {{season.name}}\\n          <hr />\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form class=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Operation name:</label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"seasonNewName\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Description: </label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"seasonNewDesc\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"\\n                required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Year: </label>\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"seasonNewYear\\\" name=\\\"year\\\" class=\\\"form-control rounded-0\\\" required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Season: </label>\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"seasonNewSeason\\\" name=\\\"season\\\" class=\\\"form-control rounded-0\\\"\\n                required>\\n            </div>    \\n           \\n            <button type=\\\"button\\\" (click)=\\\"editSeason()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\n          </form>\\n        </div>\\n      \\n      </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Season } from '../season.model';\nimport { Character } from '../../operators/operator.model';\nimport { SiegeService } from '../../siege.service';\nimport { World } from 'src/app/worlds/world.model';\nimport { AuthService } from 'src/app/auth.service';\nimport { SeasonsComponent } from '../seasons.component';\n\n@Component({\n  selector: 'app-season-edit',\n  templateUrl: './season-edit.component.html',\n  styleUrls: ['./season-edit.component.css']\n})\nexport class SeasonEditComponent implements OnInit {\n  \n  operators = [];\n  @Input() season: Season;\n\n  worlds = [];\n  @Input() world: World;\n  \n  seasonEdit;\n  seasonNewName = '';\n  seasonNewDesc = '';\n  seasonNewYear = 0;\n  seasonNewSeason = 0;\n\n\n\n  // seasonEditForm = {\n  //     name: String,\n  //     description: String,\n  //     year: Number,\n  //     season: Number,\n  //     operator: Character,\n  //     world: World\n      \n      \n    \n  // }\n\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _seasonComp: SeasonsComponent) { }\n\n  ngOnInit() {\n    return this._siegeService.getOperators()\n    .subscribe(\n      res => this.operators = res,\n      err => console.log(err)\n    ),\n    this._siegeService.getWorlds()\n    .subscribe(\n      res => this.worlds = res,\n      err => console.log(err)\n    )\n\n    \n  }\n\n  editSeason() {\n    if (this._authService.loggedIn) {\n    this.seasonEdit = new Season(this.season.name, this.seasonNewName, this.seasonNewDesc, this.seasonNewYear, this.seasonNewSeason)\n    this._siegeService.editSeason (this.seasonEdit)\n    .subscribe(\n      res => {\n        this._seasonComp.refreshSeasons();\n        console.log(res)},\n      err => console.log(err)\n    )}\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLXBvcHVsYXRlL3NlYXNvbi1wb3B1bGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\n    <h5 class=\\\"card-title\\\">Populate season: </h5>\\n    <hr />\\n    <div class=\\\"form-group\\\">\\n      <label>Season: </label>\\n      <select id=\\\"SeasonSelector\\\" [(ngModel)]=\\\"seasonCreateData.name\\\" name=\\\"name\\\" style=\\\"width: 100%;\\\"\\n        class=\\\"dropdownoperator\\\">\\n        <option *ngFor=\\\"let season of seasons\\\" value=\\\"{{season._id}}\\\">{{season.name}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Operator: </label>\\n      <select id=\\\"OperatorSelector\\\" [(ngModel)]=\\\"seasonCreateData.operatorName\\\" name=\\\"operatorName\\\" style=\\\"width: 100%;\\\"\\n        class=\\\"dropdownoperator\\\">\\n        <option *ngFor=\\\"let operator of operators\\\" value=\\\"{{operator._id}}\\\">{{operator.name}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Map: </label>\\n      <select id=\\\"WorldSelector\\\" [(ngModel)]=\\\"seasonCreateData.siegeMapName\\\" name=\\\"siegeMapName\\\" style=\\\"width: 100%;\\\"\\n        class=\\\"dropdownoperator\\\">\\n        <option *ngFor=\\\"let map of maps\\\" value=\\\"{{map._id}}\\\">{{map.name}}</option>\\n      </select>\\n    </div>\\n    <a (click)=\\\"populateSeason()\\\" class=\\\"btn btn-warning  mt-2 mr-2\\\">Confirm</a>\\n    <a routerLink='/seasons' routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">Cancel</a>\\n  </div>>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SiegeService } from '../../siege.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { Season } from '../season.model';\n\n@Component({\n  selector: 'app-season-populate',\n  templateUrl: './season-populate.component.html',\n  styleUrls: ['./season-populate.component.css']\n})\nexport class SeasonPopulateComponent implements OnInit {\n\n  @Input() season : Season;\n  seasonCreateData = {};\n  maps = [];\n  operators = [];\n  seasons = [];\n\n  constructor(\n    private _siegeService: SiegeService,\n    private _router: Router,\n    private _authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    return this._siegeService.getOperators()\n    .subscribe(\n      res => this.operators = res,\n      err => console.log(err)\n    ),\n    this._siegeService.getWorlds()\n    .subscribe(\n      res => this.maps = res,\n      err => console.log(err)\n  ),\nthis._siegeService.getSeasons()\n.subscribe(\n  res => this.seasons = res,\n  err => console.log(err)\n)\n  }\n\n  populateSeason() {\n    this._siegeService.populateSeason(this.seasonCreateData)\n      .subscribe(\n        res => {\n          console.log(res)\n          this._router.navigate(['/operations'])})\n    err => console.log(err)\n  }\n}","import { World } from '../worlds/world.model';\r\nimport { Character } from '../operators/operator.model';\r\n\r\n\r\nexport class Season {\r\n    constructor(public name: String, public newName:String, public description: String, public year: Number, public season: Number) {}\r\n}\r\n\r\nexport class popuSeason {\r\n    constructor(public _id?:String, public name?:String, public description?:String, public year?:Number, public season?:Number, public world?: World, public operator?: Character){}\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card mt-5\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n    <div class=\\\"card-body\\\">\\n        <a routerLink=\\\"/operations/create\\\" class=\\\"btn btn-success editbutton\\\">Niewe Operation aanmaken</a>\\n        <a routerLink=\\\"/operations/populate\\\" class=\\\"btn btn-primary editbutton\\\">Populate bestaande Operation</a>\\n        \\n      </div>\\n  </div>\\n\\n<div class=\\\"row mt-5\\\">\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let season of seasons\\\">\\n    <div class=\\\"card text-center\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">\\n          {{season.name}}\\n        </h5>\\n        <p class=\\\"card-text\\\">\\n         Year {{season.year}}, Season: {{season.season}}\\n        </p>\\n        \\n        <a (click)=\\\"onSelect(season)\\\" class=\\\"btn btn-primary\\\">Meer Informatie</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-season-detail [season]=\\\"selectedSeason\\\"></app-season-detail>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SiegeService } from '../siege.service';\r\nimport { Season } from './season.model';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-seasons',\r\n  templateUrl: './seasons.component.html',\r\n  styleUrls: ['./seasons.component.css']\r\n})\r\nexport class SeasonsComponent implements OnInit {\r\n  \r\n  seasons = []\r\n  public selectedSeason: Season;\r\n  \r\n  constructor (private _siegeService: SiegeService, private _authService : AuthService) {}\r\n  ngOnInit() {\r\n    this._siegeService.getSeasons()\r\n    .subscribe(\r\n      res => this.seasons = res,\r\n      err => console.log\r\n    )\r\n  }\r\n\r\n  onSelect(season:Season) : void {\r\n    this.selectedSeason = season;\r\n  }\r\n\r\n  refreshSeasons() {\r\n    return this._siegeService.getSeasons()\r\n    .subscribe(\r\n      res => this.seasons = res,\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Season } from './seasons/season.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { environment } from '../environments/environment'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiegeService {\n  private seasons: Season[] = [];\n  private season: Season;\n  private headers = new Headers({ 'Content-Type': 'applicaiton/json' });\n\n  seasonsChanged = new Subject<Season[]>();\n  //ListURLs\n  private _worldsUrl = environment.serverUrl + \"/api/worlds/\";\n  private _operatorsUrl = environment.serverUrl + \"/api/operators/\";\n  private _seasonsUrl = environment.serverUrl + \"/api/seasons/\";\n  private _userUrl = environment.serverUrl + \"/api/users/\"\n\n  //Detail URLs\n  // private _worldUrl = \"http://siegewiki.herokuapp.com/api/world\";\n  // private _operatorUrl = \"http://siegewiki.herokuapp.com/api/operator\";\n  // private _seasonUrl = \"http://siegewiki.herokuapp.com/api/season\";\n\n\n\n  constructor(private http: HttpClient) { }\n\n  //WORLDS API CALLS\n  getWorlds() {\n    return this.http.get<any>(this._worldsUrl)\n  }\n\n  addWorld(world) {\n    return this.http.post<any>(this._worldsUrl, world)\n  }\n\n  editWorld(world: {}) {\n    console.log('ewaja' + world)\n    return this.http.put<any>(this._worldsUrl, world);\n  }\n  \n  deleteWorld(name: any) {\n    const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'name': name\n        })\n      };\n    return this.http.delete<any>(this._worldsUrl, httpOptions );\n    }\n\n  //OPERATORS API CALLS\n  getOperators() {\n    return this.http.get<any>(this._operatorsUrl)\n  }\n  addOperator(operator) {\n    return this.http.post<any>(this._operatorsUrl, operator)\n  }\n\n  editOperator(operator: {}) {\n    console.log('ewaja' + operator)\n    return this.http.put<any>(this._operatorsUrl, operator);\n  }\n\n  deleteOperator(name: any) {\n    const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'name': name\n        })\n      };\n    return this.http.delete<any>(this._operatorsUrl, httpOptions );\n    }\n\n  //SEASONS API CALLS\n  getSeasons() {\n    return this.http.get<any>(this._seasonsUrl)\n  }\n\n  addSeason(season) {\n    return this.http.post<any>(this._seasonsUrl, season)\n  }\n\n  editSeason(season: {}) {\n    console.log('ewaja' + season)\n    return this.http.put<any>(this._seasonsUrl, season);\n  }\n\n  populateSeason(season: any) {\n    console.log(season)\n    return this.http.put<any>(this._seasonsUrl + 'populate/', season);\n}\n\n  deleteSeason(name: any) {\n    console.log(name)\n    const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'name': name\n        })\n      };\n    return this.http.delete<any>(this._seasonsUrl, httpOptions );\n    }\n\n\n  //USER DELETE\n  deleteUser(name, pass) {\n    const httpOptions = {\n      headers: new HttpHeaders ({\n        'Content-Type':  'application/json',\n        'name': name,\n        'password': pass\n      })\n    }\n    return this.http.delete<any>(this._userUrl, httpOptions );\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n\n  constructor(private injector: Injector) { }\n\n  intercept(req, next) {\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        authorization: `Bearer ${authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZGVsZXRlL3VzZXItZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 mx-auto\\\">\\n        \\n  \\n        <!-- form card login -->\\n        <div class=\\\"card rounded-0\\\">\\n          <div class=\\\"card-header\\\">\\n            <h3 class=\\\"mb-0\\\">Delete User</h3>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <form class=\\\"form\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name1\\\">name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\n              </div>\\n              <button type=\\\"button\\\" (click)=\\\"deleteUser()\\\" class=\\\"btn btn-danger createbutton\\\">Delete</button>\\n            </form>\\n          </div>\\n          <!--/card-block-->\\n        </div>\\n        <!-- /form card login -->\\n  \\n      </div>\\n  \\n  \\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthGuard } from '../auth.guard';\nimport { SiegeService } from '../siege.service';\n\n@Component({\n  selector: 'app-user-delete',\n  templateUrl: './user-delete.component.html',\n  styleUrls: ['./user-delete.component.css']\n})\nexport class UserDeleteComponent implements OnInit {\n\n  name: String\n  password: String\n\n  constructor(\n    private _authGuard: AuthGuard,\n    private _siegeService: SiegeService\n  ) { }\n\n  ngOnInit() {\n    this._authGuard.canActivate();\n  }\n\n  deleteUser() {\n    console.log(this.name)\n    this._siegeService.deleteUser(this.name, this.password)\n    .subscribe (\n      res => console.log(res),\n      err => console.log (err)\n      \n    )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1jcmVhdGUvd29ybGQtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\n    <div class=\\\"card-heading text-center\\\">\\n      Create New Map\\n      <hr/>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name1\\\">Map name:</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worldCreateForm.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Description: </label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worldCreateForm.description\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"  required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label>availableInRanked: </label>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"worldCreateForm.availableInRanked\\\" name=\\\"availableInRanked\\\" class=\\\"form-control rounded-0\\\"  required>\\n            </div>\\n            \\n          <button type=\\\"button\\\" (click)=\\\"addWorld()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\n        </form>\\n      </div>\\n    \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { SiegeService } from '../../siege.service';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { World } from '../world.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-world-create',\n  templateUrl: './world-create.component.html',\n  styleUrls: ['./world-create.component.css']\n})\nexport class WorldCreateComponent implements OnInit {\n\n  worldCreateForm = {\n    \n    name: String,\n    description: String,\n    availableInRanked: Boolean\n  }\n\n  constructor(private _siegeService : SiegeService, private _router: Router) { }\n\n  ngOnInit() : void {\n  }\n\n  addWorld() {\n    this._siegeService.addWorld(this.worldCreateForm)\n     .subscribe(\n       res => {\n         this._router.navigate(['/maps'])\n         console.log(res) \n       },\n       err => {\n         console.log(err)\n       }\n     )\n  }\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1kZWxldGUvd29ybGQtZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\n  \\n  <div class=\\\"card-body text-center\\\">\\n     <h3>Weet je zeker dat je deze map wilt verwijderen?</h3>\\n     <br/>\\n     <button type=\\\"button\\\"\\t(click)=\\\"deleteWorld()\\\" class=\\\"btn btn-danger createbutton\\\">Verwijder Map</button>\\n    </div>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-world-delete',\n  templateUrl: './world-delete.component.html',\n  styleUrls: ['./world-delete.component.css']\n})\nexport class WorldDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1kZXRhaWwvd29ybGQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-world-edit [world]=\\\"selectedWorld\\\"></app-world-edit>\\n<div *ngIf=\\\"world\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">\\n                Detailed Information about {{world.name | uppercase}}\\n              </h5>\\n              <hr/>\\n              <p class=\\\"card-text\\\">\\n\\n                <b>Name:</b> \\n                <br/>\\n                {{world.name}}\\n                <br/>\\n                <b>Description:</b> \\n                <br/>\\n                {{world.description}}\\n                <br/>\\n                <b>season: </b>\\n                <br/>\\n                {{world.season}}\\n                <br/>\\n                <b>Available in Ranked: </b>\\n                <br/>\\n                {{world.availableInRanked}}\\n              </p>\\n              </div>\\n              <div>\\n                  <a *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"onSelect(world)\\\" class=\\\"btn btn-warning editbutton\\\">Edit</a> \\n                  <a *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"deleteWorld()\\\" class=\\\"btn btn-danger deletebutton\\\">Delete</a> \\n          </div>   \\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SiegeService } from '../../siege.service';\nimport { World } from '../world.model';\nimport { AuthService } from '../../auth.service';\nimport { OperatorsComponent } from 'src/app/operators/operators.component';\nimport { WorldsComponent } from '../worlds.component';\n@Component({\n  selector: 'app-world-detail',\n  templateUrl: './world-detail.component.html',\n  styleUrls: ['./world-detail.component.css']\n})\nexport class WorldDetailComponent implements OnInit {\n\n  @Input() world : World\n  selectedWorld : World\n\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _worldsComp : WorldsComponent) { }\n\n  ngOnInit() {\n  }\n  \n  onSelect(world:World) : void {\n    this.selectedWorld = world\n  }\n\n  deleteWorld() {\n    this._siegeService.deleteWorld(this.world.name)\n    .subscribe(\n      res => {\n        this._worldsComp.refreshWorlds();\n        console.log(res)\n      },\n      err => console.log(err)\n    )\n      \n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1lZGl0L3dvcmxkLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"world\\\">\\n  <div class=\\\"card mt-5 mb-5\\\">\\n    <div class=\\\"card-heading text-center\\\">\\n      Edit {{world.name}}\\n      <hr/>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name1\\\">Map name:</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newName\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Description: </label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newWorldDesc\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"  required>\\n          </div>\\n  \\n          <!-- <div class=\\\"form-group\\\">\\n              <label>Season: </label>\\n                <select id=\\\"OperationSelector\\\" [(ngModel)]=\\\" \\\" name=\\\"season\\\" style=\\\"width: 100%;\\\" class=\\\"dropdownoperator\\\" >\\n                    <option *ngFor=\\\"let season of seasons\\\" value=\\\"{{season.name}}\\\" >{{season.name}}</option>\\n                    </select>\\n            </div> -->\\n  \\n          <div class=\\\"form-group\\\">\\n              <label>availableInRanked: </label>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"newWorldRanked\\\" name=\\\"availableInRanked\\\" class=\\\"form-control rounded-0\\\" required>\\n            </div>\\n            \\n          <button type=\\\"button\\\" (click)=\\\"editWorld()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\n        </form>\\n      </div>\\n    \\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { World } from '../world.model';\r\nimport { Season } from '../../seasons/season.model';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { OperatorsComponent } from 'src/app/operators/operators.component';\r\nimport { WorldsComponent } from '../worlds.component';\r\n\r\n@Component({\r\n  selector: 'app-world-edit',\r\n  templateUrl: './world-edit.component.html',\r\n  styleUrls: ['./world-edit.component.css']\r\n})\r\nexport class WorldEditComponent implements OnInit {\r\n\r\n  seasons = []\r\n  @Input() world : World\r\n  \r\n  worldEdit;\r\n  newName = '';\r\n  newWorldDesc = '';\r\n  newWorldRanked = false;\r\n  \r\n  \r\n\r\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _worldsComp: WorldsComponent) { }\r\n\r\n  ngOnInit() {\r\n    return this._siegeService.getSeasons()\r\n    .subscribe(\r\n      res => this.seasons = res,\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n  editWorld() {\r\n    if (this._authService.loggedIn) {\r\n    this.worldEdit = new World(this.world._id, this.world.name, this.newName, this.newWorldDesc, this.newWorldRanked)\r\n    this._siegeService.editWorld(this.worldEdit)\r\n    .subscribe(\r\n      res => {\r\n        this._worldsComp.refreshWorlds();\r\n        console.log(res)},\r\n      err => console.log(err)\r\n    )}\r\n    }\r\n\r\n}\r\n","export class World {\r\n    constructor(public _id?: String, public name?:String, public newName?: String, public description?: String, public availableInRanked?: Boolean) {}\r\n}   ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card mt-5\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <a routerLink=\\\"/maps/create\\\" class=\\\"btn btn-success createbutton\\\">Niewe Map aanmaken</a>\\r\\n        \\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"row mt-5\\\">\\r\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let world of worlds\\\" [class.selected] = \\\"world === selectedWorld\\\">\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          {{world.name}}\\r\\n        </h5>\\r\\n        <p class=\\\"card-text\\\">\\r\\n          {{world.season}}\\r\\n        </p>\\r\\n        <a class=\\\"btn btn-primary\\\" (click)=\\\"onSelect(world)\\\">Meer Informatie</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-world-detail [world]=\\\"selectedWorld\\\"></app-world-detail>\"","import { Component, OnInit } from '@angular/core';\nimport { SiegeService } from '../siege.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { World } from './world.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-worlds',\n  templateUrl: './worlds.component.html',\n  styleUrls: ['./worlds.component.css']\n})\nexport class WorldsComponent implements OnInit {\n\n  worlds = []\n  selectedWorld : World;\n  constructor(private _siegeService: SiegeService, private _authService : AuthService) { }\n\n  ngOnInit() {\n\n    this._siegeService.getWorlds()\n    .subscribe(\n      res => this.worlds = res,\n      err => console.log\n    )\n  }\n\n  onSelect(world: World): void {\n    this.selectedWorld = world;\n  }\n\n  refreshWorlds() {\n    return this._siegeService.getWorlds()\n    .subscribe(\n      res => this.worlds = res,\n      err => console.log(err)\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  serverUrl: 'https://siegewiki.herokuapp.com',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}