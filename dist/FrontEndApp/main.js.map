{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/operators/operator-create/operator-create.component.css","webpack:///./src/app/operators/operator-create/operator-create.component.html","webpack:///./src/app/operators/operator-create/operator-create.component.ts","webpack:///./src/app/operators/operator-delete/operator-delete.component.css","webpack:///./src/app/operators/operator-delete/operator-delete.component.html","webpack:///./src/app/operators/operator-delete/operator-delete.component.ts","webpack:///./src/app/operators/operator-detail/operator-detail.component.css","webpack:///./src/app/operators/operator-detail/operator-detail.component.html","webpack:///./src/app/operators/operator-detail/operator-detail.component.ts","webpack:///./src/app/operators/operator-edit/operator-edit.component.css","webpack:///./src/app/operators/operator-edit/operator-edit.component.html","webpack:///./src/app/operators/operator-edit/operator-edit.component.ts","webpack:///./src/app/operators/operator-with-id/operator-with-id.component.css","webpack:///./src/app/operators/operator-with-id/operator-with-id.component.html","webpack:///./src/app/operators/operator-with-id/operator-with-id.component.ts","webpack:///./src/app/operators/operator.model.ts","webpack:///./src/app/operators/operators.component.css","webpack:///./src/app/operators/operators.component.html","webpack:///./src/app/operators/operators.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/seasons/season-create/season-create.component.css","webpack:///./src/app/seasons/season-create/season-create.component.html","webpack:///./src/app/seasons/season-create/season-create.component.ts","webpack:///./src/app/seasons/season-delete/season-delete.component.css","webpack:///./src/app/seasons/season-delete/season-delete.component.html","webpack:///./src/app/seasons/season-delete/season-delete.component.ts","webpack:///./src/app/seasons/season-detail/season-detail.component.css","webpack:///./src/app/seasons/season-detail/season-detail.component.html","webpack:///./src/app/seasons/season-detail/season-detail.component.ts","webpack:///./src/app/seasons/season-edit/season-edit.component.css","webpack:///./src/app/seasons/season-edit/season-edit.component.html","webpack:///./src/app/seasons/season-edit/season-edit.component.ts","webpack:///./src/app/seasons/season-populate/season-populate.component.css","webpack:///./src/app/seasons/season-populate/season-populate.component.html","webpack:///./src/app/seasons/season-populate/season-populate.component.ts","webpack:///./src/app/seasons/season-with-id/season-width-id/season-width-id.component.css","webpack:///./src/app/seasons/season-with-id/season-width-id/season-width-id.component.html","webpack:///./src/app/seasons/season-with-id/season-width-id/season-width-id.component.ts","webpack:///./src/app/seasons/season.model.ts","webpack:///./src/app/seasons/seasons.component.css","webpack:///./src/app/seasons/seasons.component.html","webpack:///./src/app/seasons/seasons.component.ts","webpack:///./src/app/siege.service.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/user-delete/user-delete.component.css","webpack:///./src/app/user-delete/user-delete.component.html","webpack:///./src/app/user-delete/user-delete.component.ts","webpack:///./src/app/worlds/world-create/world-create.component.css","webpack:///./src/app/worlds/world-create/world-create.component.html","webpack:///./src/app/worlds/world-create/world-create.component.ts","webpack:///./src/app/worlds/world-delete/world-delete.component.css","webpack:///./src/app/worlds/world-delete/world-delete.component.html","webpack:///./src/app/worlds/world-delete/world-delete.component.ts","webpack:///./src/app/worlds/world-detail/world-detail.component.css","webpack:///./src/app/worlds/world-detail/world-detail.component.html","webpack:///./src/app/worlds/world-detail/world-detail.component.ts","webpack:///./src/app/worlds/world-edit/world-edit.component.css","webpack:///./src/app/worlds/world-edit/world-edit.component.html","webpack:///./src/app/worlds/world-edit/world-edit.component.ts","webpack:///./src/app/worlds/world-with-id/world-with-id.component.css","webpack:///./src/app/worlds/world-with-id/world-with-id.component.html","webpack:///./src/app/worlds/world-with-id/world-with-id.component.ts","webpack:///./src/app/worlds/world.model.ts","webpack:///./src/app/worlds/worlds.component.css","webpack:///./src/app/worlds/worlds.component.html","webpack:///./src/app/worlds/worlds.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WorldsComponent } from './worlds/worlds.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SeasonsComponent } from './seasons/seasons.component';\r\nimport { OperatorsComponent } from './operators/operators.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { AuthService } from './auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SeasonDetailComponent } from './seasons/season-detail/season-detail.component';\r\nimport { OperatorDetailComponent } from './operators/operator-detail/operator-detail.component';\r\nimport { WorldDetailComponent } from './worlds/world-detail/world-detail.component';\r\nimport { SeasonCreateComponent } from './seasons/season-create/season-create.component';\r\nimport { WorldCreateComponent } from './worlds/world-create/world-create.component';\r\nimport { OperatorCreateComponent } from './operators/operator-create/operator-create.component';\r\nimport { OperatorDeleteComponent } from './operators/operator-delete/operator-delete.component';\r\nimport { SeasonDeleteComponent } from './seasons/season-delete/season-delete.component';\r\nimport { WorldDeleteComponent } from './worlds/world-delete/world-delete.component';\r\nimport { SeasonEditComponent } from './seasons/season-edit/season-edit.component';\r\nimport { UserDeleteComponent } from './user-delete/user-delete.component';\r\nimport { OperatorEditComponent } from './operators/operator-edit/operator-edit.component';\r\nimport { WorldEditComponent } from './worlds/world-edit/world-edit.component';\r\nimport { SeasonPopulateComponent } from './seasons/season-populate/season-populate.component';\r\nimport { SeasonWidthIdComponent } from './seasons/season-with-id/season-width-id/season-width-id.component';\r\nimport { WorldWithIdComponent } from './worlds/world-with-id/world-with-id.component';\r\nimport { OperatorWithIdComponent } from './operators/operator-with-id/operator-with-id.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: HomeComponent\r\n  },\r\n  //LIST VIEW ROUTES\r\n  {\r\n    path:'operators',\r\n    component: OperatorsComponent\r\n  },\r\n  {\r\n    path:'maps',\r\n    component: WorldsComponent\r\n  },\r\n  {\r\n    path:'operations',\r\n    component: SeasonsComponent\r\n  },\r\n  // AUTHENTICATION ROUTES\r\n  {\r\n    path:'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path:'deleteUser',\r\n    component: UserDeleteComponent\r\n  },\r\n  //SEASON ROUTES\r\n  {\r\n    path:'operations/create',\r\n    component: SeasonCreateComponent,\r\n  },\r\n  {\r\n    path:'operations/delete',\r\n    component:SeasonDeleteComponent\r\n  },\r\n  {\r\n    path: 'operations/edit',\r\n    component: SeasonEditComponent\r\n  },\r\n  {\r\n    path: 'operations/populate',\r\n    component: SeasonPopulateComponent\r\n  },\r\n  {\r\n    path: 'season/:id',\r\n    component: SeasonWidthIdComponent\r\n  },\r\n  //WORLD ROUTES\r\n  {\r\n    path:'maps/create',\r\n    component: WorldCreateComponent\r\n  },\r\n  {\r\n    path:'maps/delete',\r\n    component: WorldDeleteComponent\r\n  },\r\n  {\r\n    path:'map/edit/:id',\r\n    component: WorldEditComponent\r\n  },\r\n  {\r\n    path:'map/delete/:id',\r\n    component: WorldDeleteComponent\r\n  },\r\n  {\r\n    path: 'map/:id',\r\n    component: WorldWithIdComponent\r\n  },\r\n  //OPERATOR ROUTES\r\n  {\r\n    path:'operators/create',\r\n    component: OperatorCreateComponent\r\n  },\r\n  { path: 'operators/delete',\r\n    component: OperatorDeleteComponent\r\n  },\r\n  {\r\n    path: 'operators/edit/:id',\r\n    component: OperatorEditComponent\r\n  },\r\n  {\r\n    path: 'operator/:id',\r\n    component: OperatorWithIdComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">R6SW</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/operators\\\" routerlinkActive=\\\"active\\\">Operators</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/maps\\\" routerlinkActive=\\\"active\\\">Maps</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/operations\\\" routerlinkActive=\\\"active\\\">Operations</a>\\r\\n    </li>\\r\\n</ul>\\r\\n<ul class=\\\"navbar-nav navbar-right\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" (click)=\\\"_authService.logoutUser()\\\">Logout</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/deleteUser\\\" routerLinkActive=\\\"active\\\" >Delete User</a>\\r\\n  </li>\\r\\n</ul>\\r\\n  </div>\\r\\n</nav>    \\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>            \\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Rainbow Six Siege Wiki';\r\n\r\n  constructor(private _authService: AuthService){\r\n    \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, forwardRef } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SeasonsComponent } from './seasons/seasons.component';\r\nimport { SeasonDetailComponent } from './seasons/season-detail/season-detail.component';\r\nimport { SeasonEditComponent } from './seasons/season-edit/season-edit.component';\r\nimport { SeasonDeleteComponent } from './seasons/season-delete/season-delete.component';\r\nimport { OperatorsComponent } from './operators/operators.component';\r\nimport { OperatorEditComponent } from './operators/operator-edit/operator-edit.component';\r\nimport { OperatorDetailComponent } from './operators/operator-detail/operator-detail.component';\r\nimport { OperatorDeleteComponent } from './operators/operator-delete/operator-delete.component';\r\nimport { WorldsComponent } from './worlds/worlds.component';\r\nimport { WorldEditComponent } from './worlds/world-edit/world-edit.component';\r\nimport { WorldDetailComponent } from './worlds/world-detail/world-detail.component';\r\nimport { WorldDeleteComponent } from './worlds/world-delete/world-delete.component';;\r\nimport { UserDeleteComponent } from './user-delete/user-delete.component';\r\nimport { Http, Response, HttpModule } from '@angular/http';\r\nimport { FormsModule, FormGroup, FormBuilder, Validators, ReactiveFormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS} from  '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { SiegeService } from './siege.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { TokenInterceptorService } from './token-interceptor.service';\r\nimport { SeasonCreateComponent } from './seasons/season-create/season-create.component';\r\nimport { WorldCreateComponent } from './worlds/world-create/world-create.component';\r\nimport { OperatorCreateComponent } from './operators/operator-create/operator-create.component';\r\nimport { SeasonPopulateComponent } from './seasons/season-populate/season-populate.component';\r\nimport { SeasonWidthIdComponent } from './seasons/season-with-id/season-width-id/season-width-id.component';\r\nimport { WorldWithIdComponent } from './worlds/world-with-id/world-with-id.component';\r\nimport { OperatorWithIdComponent } from './operators/operator-with-id/operator-with-id.component';\r\nimport { MatFormFieldModule, MatInputModule, MatCheckboxModule, MatButtonModule, MatSelectModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n\r\n  declarations: [\r\n    AppComponent,\r\n    SeasonsComponent,\r\n    SeasonDetailComponent,\r\n    SeasonEditComponent,\r\n    SeasonDeleteComponent,\r\n    OperatorsComponent,\r\n    OperatorEditComponent,\r\n    OperatorDetailComponent,\r\n    OperatorDeleteComponent,\r\n    WorldsComponent,\r\n    WorldEditComponent,\r\n    WorldDetailComponent,\r\n    WorldDeleteComponent,\r\n    SeasonDeleteComponent,\r\n    UserDeleteComponent,    \r\n    RegisterComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    SeasonCreateComponent,\r\n    WorldCreateComponent,\r\n    OperatorCreateComponent,\r\n    SeasonPopulateComponent,\r\n    SeasonWidthIdComponent,\r\n    WorldWithIdComponent,\r\n    OperatorWithIdComponent,\r\n    \r\n   \r\n  ],  \r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule\r\n    \r\n    \r\n    \r\n    \r\n\r\n  ],\r\n  providers: [ AppComponent, AuthService, AuthGuard, SiegeService, OperatorsComponent, SeasonsComponent, WorldsComponent,\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptorService,\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    multi: true,\r\n    useExisting: forwardRef(() => WorldEditComponent)\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private _authService: AuthService,\r\n    private _router: Router) { }\r\n\r\n    canActivate(): boolean {\r\n      if (this._authService.loggedIn()) {\r\n        console.log('true')\r\n        return true\r\n      } else {\r\n        console.log('false')\r\n        this._router.navigate(['/login'])\r\n        return false\r\n      }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n  private _registerUrl = environment.serverUrl + \"/api/user/register\"\r\n  private _loginUrl = environment.serverUrl + \"/api/user/login\";\r\n  constructor(private http: HttpClient, private _router: Router) { }\r\n\r\n  registerUser(user) {\r\n    return this.http.post<any>(this._registerUrl, user)\r\n  }\r\n\r\n  loginUser(user) {\r\n    return this.http.post<any>(this._loginUrl, user)\r\n  }\r\n\r\n  loggedIn() {\r\n    return !!localStorage.getItem('token')\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token')\r\n  }\r\n\r\n  logoutUser() {\r\n    localStorage.removeItem('token')\r\n    this._router.navigate(['/operations'])\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class='card mt-5'>\\r\\n    <div class='card-header text-center'>\\r\\n        <h1>Operations:</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    <app-seasons></app-seasons>\\r\\n\\r\\n\\r\\n<div class='card mt-5'>\\r\\n    <div class='card-header text-center'>\\r\\n        <h1>Operators:</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-operators></app-operators>\\r\\n\\r\\n<div class='card mt-5'>\\r\\n    <div class='card-header text-center'>\\r\\n        <h1>Maps:</h1>\\r\\n    </div>\\r\\n</div>\\r\\n<app-worlds></app-worlds>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n      <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n\\r\\n      <!-- form card login -->\\r\\n      <div class=\\\"card rounded-0\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h3 class=\\\"mb-0\\\">Login</h3>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <form class=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name1\\\">name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.name\\\" name=\\\"name\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" required>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" (click)=\\\"loginUser()\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\r\\n          </form>\\r\\n        </div>\\r\\n        <!--/card-block-->\\r\\n      </div>\\r\\n      <!-- /form card login -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginUserData = {\r\n    name:String,\r\n    password:String\r\n  }\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  loginUser() {\r\n    this._auth.loginUser(this.loginUserData)\r\n    .subscribe(\r\n      res => {\r\n        localStorage.setItem('token', res.token)\r\n        this._router.navigate(['/operations'])\r\n      },\r\n      err => {\r\n      if(err instanceof HttpErrorResponse) {\r\n        if (err.status === 500){\r\n          this._router.navigate(['/login'])\r\n        }\r\n\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1jcmVhdGUvb3BlcmF0b3ItY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\r\\n    <div class=\\\"card-heading text-center\\\">\\r\\n      Create New Operator\\r\\n      <hr/>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"form\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name3\\\">Operator name:</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"operatorCreateForm.name\\\" name=\\\"operatorName\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Description: </label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"operatorCreateForm.description\\\" name=\\\"operatorDescription\\\" class=\\\"form-control rounded-0\\\"  required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Side: </label>\\r\\n              <select id=\\\"OperatorSelector\\\" [(ngModel)]=\\\"operatorCreateForm.side\\\" name=\\\"side\\\" style=\\\"width: 100%;\\\" class=\\\"dropdownoperator\\\" >\\r\\n                  <option >Attacker</option>\\r\\n                  <option >Defender</option>\\r\\n                  </select>\\r\\n          </div>\\r\\n            \\r\\n          <button type=\\\"button\\\" (click)=\\\"addOperator()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    \\r\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { Character } from '../operator.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-operator-create',\r\n  templateUrl: './operator-create.component.html',\r\n  styleUrls: ['./operator-create.component.css']\r\n})\r\nexport class OperatorCreateComponent implements OnInit {\r\n\r\n  operatorCreateForm = {\r\n    name: String,\r\n    description: String,\r\n    side: String\r\n  }\r\n\r\n  constructor(private _siegeService : SiegeService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addOperator() {\r\n    this._siegeService.addOperator(this.operatorCreateForm)\r\n    .subscribe(\r\n      res => {\r\n        this._router.navigate(['/operators'])\r\n        console.log(res)\r\n      },\r\n      err => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if( err.status === 401) {\r\n            this._router.navigate(['/login'])\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1kZWxldGUvb3BlcmF0b3ItZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\r\\n  \\r\\n  <div class=\\\"card-body text-center\\\">\\r\\n     <h3>Weet je zeker dat je deze operator wilt verwijderen?</h3>\\r\\n     <br/>\\r\\n     <button type=\\\"button\\\"\\t(click)=\\\"deleteOperator()\\\" class=\\\"btn btn-danger createbutton\\\">Verwijder Operator</button>\\r\\n    </div>\\r\\n  \\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-operator-delete',\r\n  templateUrl: './operator-delete.component.html',\r\n  styleUrls: ['./operator-delete.component.css']\r\n})\r\nexport class OperatorDeleteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1kZXRhaWwvb3BlcmF0b3ItZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-operator-edit [operator]=\\\"selectedOperator\\\"></app-operator-edit>\\r\\n<div *ngIf=\\\"operator\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h5 class=\\\"card-title\\\">\\r\\n        Detailed Information about {{operator.name | uppercase}}\\r\\n      </h5>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <p class=\\\"card-text\\\">\\r\\n\\r\\n        <b>Name:</b>\\r\\n        <br />\\r\\n        {{operator.name}}\\r\\n        <br />\\r\\n        <b>Description:</b>\\r\\n        <br />\\r\\n        {{operator.description}}\\r\\n        <br />\\r\\n        <b>Side:</b>\\r\\n        <br />\\r\\n        {{operator.side}}\\r\\n        <br />\\r\\n        <b>season: </b>\\r\\n        <br />\\r\\n        {{operator.season}}\\r\\n        <br />\\r\\n      </p>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer text-center\\\">\\r\\n        <button *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"onSelect(operator)\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-warning btn-season float-left\\\">Edit</button>\\r\\n      <button [routerLink]=\\\"['/operator', operator._id]\\\" routerLinkActive=\\\"active\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-primary btn-season\\\">View</button>\\r\\n      <button *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"deleteOperator()\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-danger btn-season float-right\\\">Delete</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { Character } from '../operator.model';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { OperatorsComponent } from '../operators.component';\r\n\r\n@Component({\r\n  selector: 'app-operator-detail',\r\n  templateUrl: './operator-detail.component.html',\r\n  styleUrls: ['./operator-detail.component.css']\r\n})\r\nexport class OperatorDetailComponent implements OnInit {\r\n\r\n  @Input() operator: Character\r\n  selectedOperator: Character;\r\n\r\n  constructor(private _siegeService: SiegeService, private _authService: AuthService, private _operatorComp : OperatorsComponent) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSelect(operator:Character) : void {\r\n    this.selectedOperator = operator\r\n  }\r\n\r\n  deleteOperator() {\r\n    this._siegeService.deleteOperator(this.operator.name)\r\n    .subscribe(\r\n      res => {\r\n        this._operatorComp.refreshOperators();\r\n        console.log(res)\r\n      },\r\n      err => console.log(err)\r\n    )\r\n      \r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci1lZGl0L29wZXJhdG9yLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"operator\\\">\\r\\n  <div class=\\\"card mt-5 mb-5\\\">\\r\\n    <div class=\\\"card-heading text-center\\\">\\r\\n      Edit {{operator.name}}\\r\\n      <hr />\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form class=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Operator name:</label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"newOperatorName\\\" name=\\\"newName\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Description: </label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"newOperatorDesc\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Side: </label>\\r\\n          <select id=\\\"OperatorSelector\\\" [(ngModel)]=\\\"newOperatorSide\\\" name=\\\"side\\\" style=\\\"width: 100%;\\\" class=\\\"dropdownoperator\\\">\\r\\n            <option>Attacker</option>\\r\\n            <option>Defender</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" (click)=\\\"editOperator()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Character } from '../operator.model';\r\nimport { Season } from '../../seasons/season.model';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { OperatorsComponent } from '../operators.component';\r\n\r\n@Component({\r\n  selector: 'app-operator-edit',\r\n  templateUrl: './operator-edit.component.html',\r\n  styleUrls: ['./operator-edit.component.css']\r\n})\r\nexport class OperatorEditComponent implements OnInit {\r\n\r\n  seasons = [];\r\n\r\n  @Input() operator: Character;\r\n  operatorEdit;\r\n  newOperatorName = '';\r\n  newOperatorDesc = '';\r\n  newOperatorSide = '';\r\n\r\n\r\n  // operator = {\r\n\r\n  //   name: String,\r\n  //   description: String,\r\n  //   side: String,\r\n  //   operator: Character\r\n    \r\n  // }\r\n\r\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _operatorComp : OperatorsComponent) { }\r\n\r\n  ngOnInit() {\r\n    return this._siegeService.getSeasons()\r\n    .subscribe(\r\n      res => this.seasons = res,\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n  editOperator() {\r\n    if (this._authService.loggedIn) {\r\n    this.operatorEdit = new Character(this.operator.name, this.newOperatorName, this.newOperatorDesc, this.newOperatorSide)\r\n    this._siegeService.editOperator(this.operatorEdit)\r\n    .subscribe(\r\n      res => {\r\n        this._operatorComp.refreshOperators();\r\n        console.log(res)},\r\n      err => console.log(err)\r\n    )}\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvci13aXRoLWlkL29wZXJhdG9yLXdpdGgtaWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"this.operatorById\\\">\\r\\n    <div class=\\\"card mt-2\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h5 class=\\\"card-title\\\">\\r\\n            Detailed information about {{this.operatorById.name | uppercase}}\\r\\n          </h5>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <p class=\\\"card-text\\\">\\r\\n    \\r\\n                <b>Name:</b>\\r\\n                <br />\\r\\n                {{this.operatorById.name}}\\r\\n                <br />\\r\\n                <b>Description:</b>\\r\\n                <br />\\r\\n                {{this.operatorById.description}}\\r\\n                <br />\\r\\n                <b>Season: </b>\\r\\n                <br />\\r\\n                {{this.operatorById.season}}\\r\\n                <br />\\r\\n                <b>Available in ranked: </b>\\r\\n                <br />\\r\\n                {{this.operatorById.availableInRanked}}\\r\\n                <br />\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-center\\\">\\r\\n          <small>This component was made for Richardson Maturity level 2</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      </div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Operator } from 'semver';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SiegeService } from 'src/app/siege.service';\r\n\r\n@Component({\r\n  selector: 'app-operator-with-id',\r\n  templateUrl: './operator-with-id.component.html',\r\n  styleUrls: ['./operator-with-id.component.css']\r\n})\r\nexport class OperatorWithIdComponent implements OnInit {\r\n\r\n  @Input() operator: Operator\r\n  operatorById : Operator;\r\n  private sub: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private _siegeService: SiegeService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      console.log(params['id']);\r\n      return this._siegeService.getOperatorById(params.id)\r\n      .subscribe(\r\n        res => {\r\n          this.operatorById = res;\r\n          console.log('res: ' + res)\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n}\r\n","export class Character {\r\n    constructor( public _id?: String, public name?: String, public newName?: String, public description?: String, public side?: String){}\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdG9ycy9vcGVyYXRvcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card mt-5\\\"  *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n      <a class=\\\"btn btn-success createbutton\\\"  routerLink = \\\"/operators/create\\\">Niewe Operator aanmaken</a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-5\\\">\\r\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let operator of operators\\\">\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          {{operator.name}}\\r\\n        </h5>\\r\\n        <p class=\\\"card-text\\\">\\r\\n          {{operator.side}}\\r\\n        </p>\\r\\n        <a (click)=\\\"onSelect(operator)\\\" class=\\\"btn btn-primary\\\">Meer Informatie</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-operator-detail [operator]=\\\"selectedOperator\\\"></app-operator-detail>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SiegeService } from '../siege.service';\r\nimport { Character } from './operator.model';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-operators',\r\n  templateUrl: './operators.component.html',\r\n  styleUrls: ['./operators.component.css']\r\n})\r\nexport class OperatorsComponent implements OnInit {\r\n\r\n  operators = []\r\n  selectedOperator: Character;\r\n\r\n  constructor(private _siegeService: SiegeService, private _authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    return this._siegeService.getOperators()\r\n    .subscribe(\r\n      res => this.operators = res,\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n  onSelect(operator:Character) : void {\r\n    this.selectedOperator = operator\r\n  }\r\n\r\n  refreshOperators() {\r\n    return this._siegeService.getOperators()\r\n    .subscribe(\r\n      res => this.operators = res,\r\n      err => console.log(err)\r\n    )\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n      <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n\\r\\n      <!-- form card login -->\\r\\n      <div class=\\\"card rounded-0\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h3 class=\\\"mb-0\\\">Register</h3>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <form class=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name1\\\">Name</label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Password</label>\\r\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"registerUserData.password\\\" name=\\\"password\\\" class=\\\"form-control rounded-0\\\"  required>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" (click)=\\\"registerUser()\\\" class=\\\"btn btn-primary float-right\\\">Register</button>\\r\\n          </form>\\r\\n        </div>\\r\\n        <!--/card-block-->\\r\\n      </div>\\r\\n      <!-- /form card login -->\\r\\n\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerUserData = {\r\n    name:String,\r\n    password: String\r\n  }\r\n\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerUser() {\r\n    this._auth.registerUser(this.registerUserData)\r\n    .subscribe(\r\n      res => {\r\n        localStorage.setItem('token', res.token)\r\n        this._router.navigate(['/operations'])\r\n      },\r\n      err => {\r\n        if(err instanceof HttpErrorResponse) {\r\n          if (err.status === 401){\r\n            this._router.navigate(['/login'])\r\n          }\r\n\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWNyZWF0ZS9zZWFzb24tY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\r\\n  <div class=\\\"card-heading text-center\\\">\\r\\n    Create New Operation\\r\\n    <hr />\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form class=\\\"form\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name2\\\">Operation name:</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"seasonCreate.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Description: </label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"seasonCreate.description\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Year: </label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"seasonCreate.year\\\" name=\\\"year\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Season: </label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"seasonCreate.season\\\" name=\\\"season\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" (click)=\\\"addSeason()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <div class=\\\"card mt-5\\\" *ngIf=\\\"this.showResultBox\\\">\\r\\n      <div *ngFor=\\\"let displayresult of displayresults\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n              <h4>{{this.displayresult.result}}</h4>\\r\\n              <p>{{this.displayresult.message}}</p>\\r\\n            </div>\\r\\n      </div> \\r\\n      \\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"card-body\\\">\\r\\n      <form [formGroup] = \\\"seasonCreate\\\" (ngSubmit)=\\\"addSeason()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-4\\\">\\r\\n            Operation Name:\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-4\\\">\\r\\n            Description:\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-4\\\">\\r\\n            Year:\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-4\\\">\\r\\n            Season:\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"season\\\" />\\r\\n        </div>\\r\\n  \\r\\n        <button type=\\\"submit\\\">Submit</button>\\r\\n      </form>\\r\\n    </div> -->\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Season } from '../season.model';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { World } from 'src/app/worlds/world.model';\r\nimport { Router } from '@angular/router';\r\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\n\r\n@Component({\r\n  selector: 'app-season-create',\r\n  templateUrl: './season-create.component.html',\r\n  styleUrls: ['./season-create.component.css']\r\n})\r\nexport class SeasonCreateComponent implements OnInit {\r\n\r\n  title = 'Create Season';\r\n\r\n\r\n  seasonCreate = {\r\n    name: String,\r\n    description: String,\r\n    year: Number,\r\n    season: Number\r\n\r\n  }\r\n  displayresult? = {};\r\n  displayresults = [];\r\n\r\n\r\n\r\n  showResultBox;\r\n\r\n\r\n  constructor(private _siegeService: SiegeService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.showResultBox = false;\r\n  }\r\n\r\n  addSeason() {\r\n    this._siegeService.addSeason(this.seasonCreate)\r\n      .subscribe(\r\n        res => {\r\n          this._router.navigate(['/operations'])\r\n          console.log(res)\r\n          this.displayresult = {\r\n            result: \"success\",\r\n            message: \"Season was created succesfully\"\r\n          };\r\n          this.showResult();\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.displayresults = [\r\n\r\n          this.displayresult = {\r\n\r\n              result: \"Failed\",\r\n              message:\r\n                JSON.stringify(err.error.err.errors.name.message)\r\n\r\n\r\n          },\r\n\r\n        //   this.displayresult = {\r\n\r\n        //     result: \"Failed\",\r\n        //     message:\r\n        //       JSON.stringify(err.error.err.errors.description.message)\r\n\r\n\r\n        // }\r\n\r\n          ];\r\n\r\n\r\n\r\n            \r\n          this.showResult();\r\n        }\r\n      )\r\n  }\r\n\r\n  showResult() {\r\n    this.showResultBox = true;\r\n    setTimeout(() => {\r\n      this.showResultBox = false;\r\n    }, 5000);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWRlbGV0ZS9zZWFzb24tZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\r\\n  \\r\\n  <div class=\\\"card-body text-center\\\">\\r\\n     <h3>Weet je zeker dat je deze operation wilt verwijderen?</h3>\\r\\n     <br/>\\r\\n     <button type=\\\"button\\\"\\t(click)=\\\"deleteSeason()\\\" class=\\\"btn btn-danger createbutton\\\">Verwijder Operation</button>\\r\\n    </div>\\r\\n  \\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Season } from '../season.model';\r\nimport { SiegeService } from 'src/app/siege.service';\r\nimport { SeasonsComponent } from '../seasons.component';\r\nimport { Character } from 'src/app/operators/operator.model';\r\nimport { World } from 'src/app/worlds/world.model';\r\n\r\n@Component({\r\n  selector: 'app-season-delete',\r\n  templateUrl: './season-delete.component.html',\r\n  styleUrls: ['./season-delete.component.css']\r\n})\r\nexport class SeasonDeleteComponent implements OnInit {\r\n\r\n  \r\n\r\n  constructor(private _siegeService : SiegeService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n   \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWRldGFpbC9zZWFzb24tZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"this.showResultBox\\\">\\r\\n  <div class=\\\"content login-page form login-form\\\">\\r\\n    <h4>{{this.displayresult.result}}</h4>\\r\\n    <p>{{this.displayresult.message}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-season-edit [season]=\\\"selectedSeason\\\"></app-season-edit>\\r\\n<br>\\r\\n<div *ngIf=\\\"season\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h5 class=\\\"card-title\\\">\\r\\n        {{season.name}} season information\\r\\n      </h5>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <p>\\r\\n        <br>\\r\\n        <b>Name:</b>\\r\\n        <br />\\r\\n        {{season.name}}\\r\\n        <br />\\r\\n        <b>Description:</b>\\r\\n        <br />\\r\\n        {{season.description}}\\r\\n        <br />\\r\\n        <b>Year:</b>\\r\\n        <br />\\r\\n        {{ season.year }}\\r\\n        <br />\\r\\n      </p>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer text-center\\\">\\r\\n        <button *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"onSelect(season)\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-warning btn-season float-left\\\">Edit</button>\\r\\n      <button [routerLink]=\\\"['/season', season._id]\\\" routerLinkActive=\\\"active\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-primary btn-season\\\">View</button>\\r\\n      <button *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"deleteSeason()\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-danger btn-season float-right\\\">Delete</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { Season,  } from '../season.model';\r\nimport { AuthService } from '../../auth.service';\r\nimport { Character } from 'src/app/operators/operator.model';\r\nimport { World } from 'src/app/worlds/world.model';\r\nimport { SeasonsComponent } from '../seasons.component';\r\nimport { OperatorsComponent } from 'src/app/operators/operators.component';\r\nimport { AuthGuard } from 'src/app/auth.guard';\r\n\r\n@Component({\r\n  selector: 'app-season-detail',\r\n  templateUrl: './season-detail.component.html',\r\n  styleUrls: ['./season-detail.component.css']\r\n})\r\nexport class SeasonDetailComponent implements OnInit {\r\n\r\n  @Input() season: Season \r\n  selectedSeason: Season\r\n  popuSeason : Season\r\n\r\n  worlds = [];\r\n  operators = [];\r\n\r\n  opOfSeasonName : {};\r\n\r\n  display: Boolean;\r\n  displayS : Boolean;\r\n  \r\n\r\n  constructor(private _siegeService: SiegeService, _authGuard : AuthGuard ,private _authService : AuthService, private _seasonsComp: SeasonsComponent, private _seasonComp: SeasonsComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.display = false;\r\n    this.displayS = false;\r\n    return this._siegeService.getOperators()\r\n    .subscribe(\r\n      res => this.operators = res,\r\n      err => console.log(err)\r\n    ),\r\n    this._siegeService.getWorlds()\r\n    .subscribe(\r\n      res => this.worlds = res,\r\n      err => console.log(err)\r\n  )\r\n  }\r\n  \r\n\r\n  onSelect(season:Season) : void {\r\n    this.selectedSeason = season;\r\n    this.popuSeason = season\r\n    \r\n  }\r\n  \r\n  deleteSeason() {\r\n    console.log(this.season.name)\r\n    this._siegeService.deleteSeason(this.season.name)\r\n    .subscribe (\r\n      res => {\r\n        this._seasonComp.refreshSeasons();\r\n        console.log(res)\r\n      },\r\n      err => console.log (err)\r\n      \r\n    )\r\n  }\r\n\r\n  onSelectOperator(season: Season) {\r\n    this.display = true;\r\n    this.season = this.season\r\n    this.opOfSeasonName = this.season.operator;\r\n  }\r\n\r\n  seasonHas(operator: any) {\r\n    if (operator.name === null || undefined) return false;\r\n    if (operator._id == this.opOfSeasonName) return true;\r\n    else return false;\r\n  }\r\n    \r\n    }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLWVkaXQvc2Vhc29uLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<div *ngIf=\\\"season\\\">\\r\\n    <div class=\\\"card mt-5 mb-5\\\">\\r\\n        <div class=\\\"card-heading text-center\\\">\\r\\n          Edit {{season.name}}\\r\\n          <hr />\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <form class=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Operation name:</label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"seasonNewName\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Description: </label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"seasonNewDesc\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"\\r\\n                required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Year: </label>\\r\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"seasonNewYear\\\" name=\\\"year\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Season: </label>\\r\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"seasonNewSeason\\\" name=\\\"season\\\" class=\\\"form-control rounded-0\\\"\\r\\n                required>\\r\\n            </div>    \\r\\n           \\r\\n            <button type=\\\"button\\\" (click)=\\\"editSeason()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      \\r\\n      </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Season } from '../season.model';\r\nimport { Character } from '../../operators/operator.model';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { World } from 'src/app/worlds/world.model';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { SeasonsComponent } from '../seasons.component';\r\n\r\n@Component({\r\n  selector: 'app-season-edit',\r\n  templateUrl: './season-edit.component.html',\r\n  styleUrls: ['./season-edit.component.css']\r\n})\r\nexport class SeasonEditComponent implements OnInit {\r\n  \r\n  operators = [];\r\n  @Input() season: Season;\r\n\r\n  worlds = [];\r\n  @Input() world: World;\r\n  \r\n  seasonEdit;\r\n  seasonNewName = '';\r\n  seasonNewDesc = '';\r\n  seasonNewYear = 0;\r\n  seasonNewSeason = 0;\r\n\r\n\r\n\r\n  // seasonEditForm = {\r\n  //     name: String,\r\n  //     description: String,\r\n  //     year: Number,\r\n  //     season: Number,\r\n  //     operator: Character,\r\n  //     world: World\r\n      \r\n      \r\n    \r\n  // }\r\n\r\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _seasonComp: SeasonsComponent) { }\r\n\r\n  ngOnInit() {\r\n    return this._siegeService.getOperators()\r\n    .subscribe(\r\n      res => this.operators = res,\r\n      err => console.log(err)\r\n    ),\r\n    this._siegeService.getWorlds()\r\n    .subscribe(\r\n      res => this.worlds = res,\r\n      err => console.log(err)\r\n    )\r\n\r\n    \r\n  }\r\n\r\n  editSeason() {\r\n    if (this._authService.loggedIn) {\r\n    this.seasonEdit = new Season(this.season.name, this.seasonNewName, this.seasonNewDesc, this.seasonNewYear, this.seasonNewSeason)\r\n    this._siegeService.editSeason (this.seasonEdit)\r\n    .subscribe(\r\n      res => {\r\n        this._seasonComp.refreshSeasons();\r\n        console.log(res)},\r\n      err => console.log(err)\r\n    )}\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLXBvcHVsYXRlL3NlYXNvbi1wb3B1bGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\r\\n    <h5 class=\\\"card-title\\\">Populate season: </h5>\\r\\n    <hr />\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Season: </label>\\r\\n      <select id=\\\"SeasonSelector\\\" [(ngModel)]=\\\"seasonCreateData.name\\\" name=\\\"name\\\" style=\\\"width: 100%;\\\"\\r\\n        class=\\\"dropdownoperator\\\">\\r\\n        <option *ngFor=\\\"let season of seasons\\\" value=\\\"{{season._id}}\\\">{{season.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Operator: </label>\\r\\n      <select id=\\\"OperatorSelector\\\" [(ngModel)]=\\\"seasonCreateData.operatorName\\\" name=\\\"operatorName\\\" style=\\\"width: 100%;\\\"\\r\\n        class=\\\"dropdownoperator\\\">\\r\\n        <option *ngFor=\\\"let operator of operators\\\" value=\\\"{{operator._id}}\\\">{{operator.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Map: </label>\\r\\n      <select id=\\\"WorldSelector\\\" [(ngModel)]=\\\"seasonCreateData.siegeMapName\\\" name=\\\"siegeMapName\\\" style=\\\"width: 100%;\\\"\\r\\n        class=\\\"dropdownoperator\\\">\\r\\n        <option *ngFor=\\\"let map of maps\\\" value=\\\"{{map._id}}\\\">{{map.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <a (click)=\\\"populateSeason()\\\" class=\\\"btn btn-warning  mt-2 mr-2\\\">Confirm</a>\\r\\n    <a routerLink='/seasons' routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">Cancel</a>\\r\\n  </div>>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../auth.service';\r\nimport { Season } from '../season.model';\r\n\r\n@Component({\r\n  selector: 'app-season-populate',\r\n  templateUrl: './season-populate.component.html',\r\n  styleUrls: ['./season-populate.component.css']\r\n})\r\nexport class SeasonPopulateComponent implements OnInit {\r\n\r\n  @Input() season : Season;\r\n  seasonCreateData = {};\r\n  maps = [];\r\n  operators = [];\r\n  seasons = [];\r\n\r\n  constructor(\r\n    private _siegeService: SiegeService,\r\n    private _router: Router,\r\n    private _authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    return this._siegeService.getOperators()\r\n    .subscribe(\r\n      res => this.operators = res,\r\n      err => console.log(err)\r\n    ),\r\n    this._siegeService.getWorlds()\r\n    .subscribe(\r\n      res => this.maps = res,\r\n      err => console.log(err)\r\n  ),\r\nthis._siegeService.getSeasons()\r\n.subscribe(\r\n  res => this.seasons = res,\r\n  err => console.log(err)\r\n)\r\n  }\r\n\r\n  populateSeason() {\r\n    this._siegeService.populateSeason(this.seasonCreateData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this._router.navigate(['/operations'])})\r\n    err => console.log(err)\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29uLXdpdGgtaWQvc2Vhc29uLXdpZHRoLWlkL3NlYXNvbi13aWR0aC1pZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <app-season-edit [season]=\\\"selectedSeason\\\"></app-season-edit> -->\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"this.seasonById\\\">\\r\\n    <div class=\\\"card mt-2\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n                <h5 class=\\\"card-title\\\">\\r\\n                        Detailed Information about {{this.seasonById.name | uppercase}}\\r\\n                    </h5>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <p class=\\\"card-text\\\">\\r\\n\\r\\n                <b>Name:</b>\\r\\n                <br />\\r\\n                {{this.seasonById.name}}\\r\\n                <br />\\r\\n                <b>Description:</b>\\r\\n                <br />\\r\\n                {{this.seasonById.description}}\\r\\n                <br />\\r\\n                <b>Year: </b>\\r\\n                <br />\\r\\n                {{this.seasonById.year}}\\r\\n                <br />\\r\\n                <b>Season: </b>\\r\\n                <br />\\r\\n                {{this.seasonById.season}}\\r\\n                <br />\\r\\n            </p>\\r\\n\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-center\\\">\\r\\n            <small>This component was made for Richardson maturity level 2</small>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- <div *ngIf=\\\"this.display\\\" class=\\\"mt-5\\\">\\r\\n        <div *ngFor=\\\"let operator of operators\\\">\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"seasonHas(operator)\\\">\\r\\n    \\r\\n                <div class=\\\"card-title\\\">\\r\\n                    <h5>\\r\\n                        {{operator.name}}\\r\\n                    </h5>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <b>\\r\\n                        Description:\\r\\n                    </b>\\r\\n                    {{operator.description}}\\r\\n                    <br />\\r\\n                    <b>\\r\\n                        Side\\r\\n                    </b>\\r\\n                    {{operator.side}}\\r\\n    \\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div> -->\\r\\n\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Season } from '../../season.model';\r\nimport { SiegeService } from 'src/app/siege.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SeasonsComponent } from '../../seasons.component';\r\nimport { AuthService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-season-width-id',\r\n  templateUrl: './season-width-id.component.html',\r\n  styleUrls: ['./season-width-id.component.css']\r\n})\r\nexport class SeasonWidthIdComponent implements OnInit {\r\n\r\n  @Input() season : Season;\r\n  seasonById : Season;\r\n  private sub: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private _siegeService : SiegeService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      console.log(\"Id before return: \" + params['id']);\r\n      return this._siegeService.getSeasonById(params.id)\r\n      .subscribe(\r\n        res => {\r\n          this.seasonById = res;\r\n          console.log('res: ' + res);\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n}\r\n  ","import { World } from '../worlds/world.model';\r\nimport { Character } from '../operators/operator.model';\r\n\r\n\r\nexport class Season {\r\n    constructor(public _id?:String, public name?:String, public description?:String, public year?:Number, public season?:Number, public world?: World, public operator?: Character) {}\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXNvbnMvc2Vhc29ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card mt-5\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <a routerLink=\\\"/operations/create\\\" class=\\\"btn btn-success editbutton\\\">Niewe Operation aanmaken</a>\\r\\n        <a routerLink=\\\"/operations/populate\\\" class=\\\"btn btn-primary editbutton\\\">Populate bestaande Operation</a>\\r\\n        \\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"row mt-5\\\">\\r\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let season of seasons\\\">\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          {{season.name}}\\r\\n        </h5>\\r\\n        <p class=\\\"card-text\\\">\\r\\n         Year {{season.year}}, Season: {{season.season}}\\r\\n        </p>\\r\\n        <a (click)=\\\"onSelect(season)\\\" class=\\\"btn btn-primary\\\">Meer Informatie</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-season-detail [season]=\\\"selectedSeason\\\"></app-season-detail>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SiegeService } from '../siege.service';\r\nimport { Season } from './season.model';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-seasons',\r\n  templateUrl: './seasons.component.html',\r\n  styleUrls: ['./seasons.component.css']\r\n})\r\nexport class SeasonsComponent implements OnInit {\r\n  \r\n  seasons = []\r\n  selectedSeason: Season;\r\n  \r\n  constructor (private _siegeService: SiegeService, private _authService : AuthService) {}\r\n  ngOnInit() {\r\n    this._siegeService.getSeasons()\r\n    .subscribe(\r\n      res => this.seasons = res,\r\n      err => console.log\r\n    )\r\n  }\r\n\r\n  onSelect(season:Season) : void {\r\n    this.selectedSeason = season;\r\n  }\r\n\r\n  refreshSeasons() {\r\n    return this._siegeService.getSeasons()\r\n    .subscribe(\r\n      res => this.seasons = res,\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Season } from './seasons/season.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from '../environments/environment'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SiegeService {\r\n  private seasons: Season[] = [];\r\n  private season: Season;\r\n  private headers = new Headers({ 'Content-Type': 'applicaiton/json' });\r\n\r\n  seasonsChanged = new Subject<Season[]>();\r\n  //ListURLs\r\n  private _worldsUrl = environment.serverUrl + \"/api/worlds/\";\r\n  private _operatorsUrl = environment.serverUrl + \"/api/operators/\";\r\n  private _seasonsUrl = environment.serverUrl + \"/api/seasons/\";\r\n  private _userUrl = environment.serverUrl + \"/api/users/\"\r\n\r\n  //Detail URLs\r\n  private _worldUrl = \"https://siegewiki.herokuapp.com/api/world/\";\r\n  private _operatorUrl = \"https://siegewiki.herokuapp.com/api/operator/\";\r\n  private _seasonUrl = \"https://siegewiki.herokuapp.com/api/season/\";\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //WORLDS API CALLS\r\n  getWorlds() {\r\n    return this.http.get<any>(this._worldsUrl)\r\n  }\r\n\r\n  getWorldById( _id:any) {\r\n    console.log(this._worldUrl + '' + _id)\r\n    return this.http.get<any>(this._worldUrl + '' + _id)\r\n    }\r\n\r\n  addWorld(world) {\r\n    return this.http.post<any>(this._worldUrl, world)\r\n  }\r\n\r\n  editWorld(_id: any, world: {}) {\r\n    console.log(world)\r\n    return this.http.put<any>(this._worldUrl + '' + _id, world);\r\n  }\r\n  \r\n  deleteWorld(_id: any) {\r\n    console.log(_id)\r\n    return this.http.delete<any>(this._worldUrl + '' + _id );\r\n    }\r\n\r\n  //OPERATORS API CALLS\r\n  getOperators() {\r\n    return this.http.get<any>(this._operatorsUrl)\r\n  }\r\n  getOperatorById(_id: any) {\r\n    return this.http.get<any>(this._operatorUrl + '' + _id);\r\n}\r\n  addOperator(operator) {\r\n    return this.http.post<any>(this._operatorsUrl, operator)\r\n  }\r\n\r\n  editOperator(operator: {}) {\r\n    console.log('ewaja' + operator)\r\n    return this.http.put<any>(this._operatorsUrl, operator);\r\n  }\r\n\r\n  deleteOperator(name: any) {\r\n    const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type':  'application/json',\r\n          'name': name\r\n        })\r\n      };\r\n    return this.http.delete<any>(this._operatorsUrl, httpOptions );\r\n    }\r\n\r\n  //SEASONS API CALLS\r\n  getSeasons() {\r\n    return this.http.get<any>(this._seasonsUrl)\r\n  }\r\n\r\n  getSeasonById(_id: any) {\r\n    return this.http.get<any>(this._seasonUrl + '' + _id)\r\n  }\r\n\r\n  addSeason(season) {\r\n    return this.http.post<any>(this._seasonsUrl, season)\r\n  }\r\n\r\n  editSeason(season: {}) {\r\n    console.log('ewaja' + season)\r\n    return this.http.put<any>(this._seasonsUrl, season);\r\n  }\r\n\r\n  populateSeason(season: any) {\r\n    console.log(season)\r\n    return this.http.put<any>(this._seasonsUrl + 'populate/', season);\r\n}\r\n\r\n  deleteSeason(name: any) {\r\n    console.log(name)\r\n    const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type':  'application/json',\r\n          'name': name\r\n        })\r\n      };\r\n    return this.http.delete<any>(this._seasonsUrl, httpOptions );\r\n    }\r\n\r\n\r\n  //USER DELETE\r\n  deleteUser(name, pass) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders ({\r\n        'Content-Type':  'application/json',\r\n        'name': name,\r\n        'password': pass\r\n      })\r\n    }\r\n    return this.http.delete<any>(this._userUrl, httpOptions );\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(req, next) {\r\n    let authService = this.injector.get(AuthService)\r\n    let tokenizedReq = req.clone({\r\n      setHeaders: {\r\n        authorization: `Bearer ${authService.getToken()}`\r\n      }\r\n    })\r\n    return next.handle(tokenizedReq)\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZGVsZXRlL3VzZXItZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        \\r\\n  \\r\\n        <!-- form card login -->\\r\\n        <div class=\\\"card rounded-0\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h3 class=\\\"mb-0\\\">Delete User</h3>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <form class=\\\"form\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name1\\\">name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\r\\n              </div>\\r\\n              <button type=\\\"button\\\" (click)=\\\"deleteUser()\\\" class=\\\"btn btn-danger createbutton\\\">Delete</button>\\r\\n            </form>\\r\\n          </div>\\r\\n          <!--/card-block-->\\r\\n        </div>\\r\\n        <!-- /form card login -->\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  \\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthGuard } from '../auth.guard';\r\nimport { SiegeService } from '../siege.service';\r\n\r\n@Component({\r\n  selector: 'app-user-delete',\r\n  templateUrl: './user-delete.component.html',\r\n  styleUrls: ['./user-delete.component.css']\r\n})\r\nexport class UserDeleteComponent implements OnInit {\r\n\r\n  name: String\r\n  password: String\r\n\r\n  constructor(\r\n    private _authGuard: AuthGuard,\r\n    private _siegeService: SiegeService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this._authGuard.canActivate();\r\n  }\r\n\r\n  deleteUser() {\r\n    console.log(this.name)\r\n    this._siegeService.deleteUser(this.name, this.password)\r\n    .subscribe (\r\n      res => console.log(res),\r\n      err => console.log (err)\r\n      \r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1jcmVhdGUvd29ybGQtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\r\\n    <div class=\\\"card-heading text-center\\\">\\r\\n      Create New Map\\r\\n      <hr/>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"form\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name1\\\">Map name:</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worldCreateForm.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Description: </label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worldCreateForm.description\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"  required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label>availableInRanked: </label>\\r\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"worldCreateForm.availableInRanked\\\" name=\\\"availableInRanked\\\" class=\\\"form-control rounded-0\\\"  required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Season</label>\\r\\n              <select class=\\\"string-box btn text-white rounding half-black list-item mt-1 text-center\\\" [(ngModel)]=\\\"worldCreateForm.season\\\"  name=\\\"season\\\">\\r\\n                  <option class=\\\"string-box btn text-white rounding half-black list-item mt-1 text-center\\\">Selecteer een Season</option>\\r\\n                  <option class=\\\"string-box btn text-white rounding half-black list-item mt-1 text-center\\\" *ngFor=\\\"let season of seasons\\\" value=\\\"{{season._id}}\\\">{{season.name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            \\r\\n          <button type=\\\"button\\\" (click)=\\\"addWorld()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    \\r\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\r\nimport { World } from '../world.model';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { Season } from 'src/app/seasons/season.model';\r\n\r\n@Component({\r\n  selector: 'app-world-create',\r\n  templateUrl: './world-create.component.html',\r\n  styleUrls: ['./world-create.component.css']\r\n})\r\nexport class WorldCreateComponent implements OnInit {\r\n  \r\n  @Input() season : Season\r\n  seasons : []\r\n\r\n  worldCreateForm = {\r\n    \r\n    name: String,\r\n    description: String,\r\n    availableInRanked: Boolean,\r\n    season: {}\r\n  }\r\n\r\n  constructor(private _siegeService : SiegeService, private _router: Router, private _auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this._auth.loggedIn();\r\n    this._siegeService.getSeasons()\r\n        .subscribe(\r\n          res => this.seasons = res,\r\n          err => console.log(err)\r\n)\r\n  }\r\n\r\n  addWorld() {\r\n    this._siegeService.addWorld(this.worldCreateForm)\r\n     .subscribe(\r\n       res => {\r\n         this._router.navigate(['/maps'])\r\n         console.log(res) \r\n       },\r\n       err => {\r\n         console.log(err)\r\n       }\r\n     )\r\n  }\r\n\r\n  // selectSeasonFromList(season: any) {\r\n  //   this.worldCreateForm.patchValue({\r\n  //     season: s\r\n  //   })\r\n  // }\r\n  \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1kZWxldGUvd29ybGQtZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card mt-5\\\">\\r\\n  \\r\\n  <div class=\\\"card-body text-center\\\">\\r\\n     <h3>Weet je zeker dat je deze map wilt verwijderen?</h3>\\r\\n     <br/>\\r\\n     <button type=\\\"button\\\"\\t(click)=\\\"deleteWorld()\\\" class=\\\"btn btn-danger createbutton\\\">Verwijder Map</button>\\r\\n    </div>\\r\\n  \\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { World } from '../world.model';\r\nimport { SiegeService } from 'src/app/siege.service';\r\nimport { WorldsComponent } from '../worlds.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-world-delete',\r\n  templateUrl: './world-delete.component.html',\r\n  styleUrls: ['./world-delete.component.css']\r\n})\r\nexport class WorldDeleteComponent implements OnInit {\r\n\r\n  @Input() world : World\r\n  worldToDelete: World;\r\n  private sub: any;\r\n  \r\n  constructor(private _siegeService: SiegeService, private _worldsComp: WorldsComponent, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n\r\n    this._siegeService.getWorldById(params.id)\r\n      .subscribe(\r\n        res => {\r\n          this.worldToDelete = res\r\n          //console.log(this.worldById)\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  deleteWorld() {\r\n    this._siegeService.deleteWorld(this.worldToDelete._id)\r\n    .subscribe(\r\n      res => {\r\n        this._worldsComp.refreshWorlds();\r\n        console.log(res)\r\n      },\r\n      err => console.log(err)\r\n    )\r\n      \r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1kZXRhaWwvd29ybGQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-world-edit [world]=\\\"selectedWorld\\\"></app-world-edit>\\r\\n<div *ngIf=\\\"world\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n          <h5 class=\\\"card-title\\\">\\r\\n              Detailed Information about {{world.name | uppercase}}\\r\\n            </h5>\\r\\n      </div>\\r\\n        <div class=\\\"card-body\\\">           \\r\\n              <p class=\\\"card-text\\\">\\r\\n\\r\\n                <b>Name:</b> \\r\\n                <br/>\\r\\n                {{world.name}}\\r\\n                <br/>\\r\\n                <b>Description:</b> \\r\\n                <br/>\\r\\n                {{world.description}}\\r\\n                <br/>\\r\\n                <b>season: </b>\\r\\n                <br/>\\r\\n                {{world.season}}\\r\\n                <br/>\\r\\n                <b>Available in Ranked: </b>\\r\\n                <br/>\\r\\n                {{world.availableInRanked}}\\r\\n              </p>\\r\\n              </div>\\r\\n              <div class=\\\"card-footer text-center\\\">\\r\\n                  \\r\\n                  \\r\\n                  <button [routerLink]=\\\"['/map', world._id]\\\" routerLinkActive=\\\"active\\\" type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-primary btn-season\\\">View</button>\\r\\n                 \\r\\n              </div>  \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { World } from '../world.model';\r\nimport { AuthService } from '../../auth.service';\r\nimport { OperatorsComponent } from 'src/app/operators/operators.component';\r\nimport { WorldsComponent } from '../worlds.component';\r\n@Component({\r\n  selector: 'app-world-detail',\r\n  templateUrl: './world-detail.component.html',\r\n  styleUrls: ['./world-detail.component.css']\r\n})\r\nexport class WorldDetailComponent implements OnInit {\r\n\r\n  @Input() world : World\r\n  selectedWorld : World\r\n\r\n  constructor(private _siegeService: SiegeService, private _authService : AuthService, private _worldsComp : WorldsComponent) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  onSelect(world:World) : void {\r\n    this.selectedWorld = world\r\n  }\r\n\r\n  deleteWorld() {\r\n    this._siegeService.deleteWorld(this.world.name)\r\n    .subscribe(\r\n      res => {\r\n        this._worldsComp.refreshWorlds();\r\n        console.log(res)\r\n      },\r\n      err => console.log(err)\r\n    )\r\n      \r\n    }\r\n\r\n    \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC1lZGl0L3dvcmxkLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <div *ngIf=\\\"worldById\\\">\\r\\n  <div class=\\\"card mt-5 mb-5\\\">\\r\\n    <div class=\\\"card-heading text-center\\\">\\r\\n      Edit {{worldById.name}}\\r\\n      <hr/>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"form\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name1\\\">Map name:</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newName\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Description: </label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newWorldDesc\\\" name=\\\"description\\\" class=\\\"form-control rounded-0\\\"  required>\\r\\n          </div>\\r\\n  \\r\\n      QUOTE OUT    <div class=\\\"form-group\\\">\\r\\n              <label>Season: </label>\\r\\n                <select id=\\\"OperationSelector\\\" [(ngModel)]=\\\" \\\" name=\\\"season\\\" style=\\\"width: 100%;\\\" class=\\\"dropdownoperator\\\" >\\r\\n                    <option *ngFor=\\\"let season of seasons\\\" value=\\\"{{season.name}}\\\" >{{season.name}}</option>\\r\\n                    </select>\\r\\n         TILL HERE   \\r\\n  \\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label>availableInRanked: </label>\\r\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"newWorldRanked\\\" name=\\\"availableInRanked\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n            </div>\\r\\n            \\r\\n          <button type=\\\"button\\\" (click)=\\\"editWorld()\\\" class=\\\"btn btn-primary float-right\\\">Confirm</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    \\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n<!-- <div *ngIf=\\\"worldById\\\"class=\\\"card mt-2\\\"> -->\\r\\n  <div *ngIf=\\\"worldById\\\" class=\\\"card mt-2\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h2 class=\\\"card-title\\\">\\r\\n      Edit {{worldById.name}}\\r\\n    </h2>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form [formGroup]=\\\"worldEdit\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 text-center\\\">\\r\\n              <mat-form-field appearance=\\\"fill\\\">\\r\\n              \\r\\n                  <input matInput placeholder=\\\"Naam van Map\\\" formControlName=\\\"name\\\">\\r\\n                  <mat-error *ngIf=\\\"name.invalid\\\">{{validateName()}}</mat-error>\\r\\n                </mat-form-field>\\r\\n            <mat-label>Beschikbaar in ranked</mat-label> <br />\\r\\n            <mat-checkbox class=\\\"mt-4\\\" formControlName=\\\"availableInRanked\\\">\\r\\n           \\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <label>Beschrijving</label>\\r\\n              <br />\\r\\n              <mat-form-field appearance=\\\"fill\\\">\\r\\n                  <input matInput placeholder=\\\"Beschrijving van de map\\\" formControlName=\\\"description\\\">\\r\\n                  <mat-error *ngIf=\\\"name.invalid\\\">{{validateName()}}</mat-error>\\r\\n                </mat-form-field>\\r\\n                <br/>\\r\\n\\r\\n                <label>Season</label>\\r\\n                <br/>\\r\\n                <mat-form-field>\\r\\n                  <mat-select [(value)]=\\\"season\\\" formControlName=\\\"season\\\">\\r\\n                    <div class=\\\"position-inline\\\">\\r\\n                        <mat-option>--Kies een season--</mat-option>\\r\\n                        <mat-option *ngFor=\\\"let season of seasons\\\" value=\\\"{{season._id}}\\\">{{season.name}}</mat-option>\\r\\n                    </div>                    \\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div> \\r\\n\\r\\n        <button (click)=\\\"editWorld()\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right mb-2 mr-2\\\">Bevestig</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { World } from '../world.model';\r\nimport { Season } from '../../seasons/season.model';\r\nimport { SiegeService } from '../../siege.service';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { OperatorsComponent } from 'src/app/operators/operators.component';\r\nimport { WorldsComponent } from '../worlds.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-world-edit',\r\n  templateUrl: './world-edit.component.html',\r\n  styleUrls: ['./world-edit.component.css']\r\n})\r\nexport class WorldEditComponent implements OnInit {\r\n\r\n  seasons = []\r\n  @Input() world : World\r\n  worldById : World\r\n  private sub: any;\r\n  \r\n  worldEdit : FormGroup;\r\n  \r\n  \r\n\r\n  constructor(\r\n    private route: ActivatedRoute, \r\n    private _router: Router,\r\n    private _siegeService: SiegeService, \r\n    private _authService : AuthService, \r\n    private _worldsComp: WorldsComponent,\r\n    private fb: FormBuilder\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    // return this._siegeService.getSeasons()\r\n    // .subscribe(\r\n    //   res => this.seasons = res,\r\n    //   err => console.log(err)\r\n    // )\r\n    this.sub = this.route.params.subscribe(params => {\r\n      \r\n      //console.log(params['id']);\r\n      return this.worldEdit = this.fb.group({\r\n        name:['', [Validators.required]],\r\n        description: ['',[Validators.required]],\r\n        availableInRanked:[false, [Validators.required]],\r\n        season:['',[Validators.required]]\r\n      }),\r\n      this._siegeService.getSeasons().subscribe(\r\n        res => this.seasons = res,\r\n        err => console.log(err)\r\n      )\r\n      ,this._siegeService.getWorldById(params.id)\r\n      .subscribe(\r\n        res => {\r\n          this.worldById = res\r\n          //console.log(this.worldById)\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      )\r\n      \r\n    })\r\n  }\r\n\r\n  editWorld() {\r\n    console.log(this.worldEdit.value)\r\n    this._siegeService.editWorld(this.worldById._id, this.worldEdit.value)\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._router.navigate(['/worlds/'])\r\n      },\r\n      err => console.log(err)\r\n    )\r\n      // if (this._authService.loggedIn) {\r\n      //   this.worldEdit = new World(this.worldById._id, this.newName, this.newWorldDesc, this.newWorldRanked)\r\n      //   this._siegeService.editWorld(this.worldEdit)\r\n      //   .subscribe(\r\n      //     res => {\r\n      //       this._worldsComp.refreshWorlds();\r\n      //       console.log(res)},\r\n      //     err => {\r\n      //       console.log(err)\r\n      //       console.log(\"form: \" + this.worldEdit.value)\r\n      //     }\r\n      //   )}\r\n    }\r\n    get name() {\r\n      return this.worldEdit.get('name')\r\n    }\r\n    get description() {\r\n      return this.worldEdit.get('description')\r\n    }\r\n    get availableInRanked() {\r\n      return this.worldEdit.get('availableInRanked')\r\n    }\r\n    get season() {\r\n      return this.worldEdit.get('season')\r\n    }\r\n    validateName() {\r\n      return this.name.hasError('required') ? 'Voer een naam in' : '';\r\n    }\r\n    validateDescription() {\r\n      return this.description.hasError('required') ? 'Voer een beschrijving in' : '';\r\n    }\r\n    validateAvailableInRanked() {\r\n      return this.availableInRanked.hasError('required') ? 'Voer een keuze in' : '';\r\n    }\r\n    validateSeason() {\r\n      return this.season.hasError('required') ? 'Voer een season in' : '';\r\n    }\r\n  }\r\n    \r\n\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZC13aXRoLWlkL3dvcmxkLXdpdGgtaWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"this.worldById\\\">\\r\\n  <div class=\\\"card mt-2\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h5 class=\\\"card-title\\\">\\r\\n        Detailed information about {{this.worldById.name | uppercase}}\\r\\n      </h5>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <p class=\\\"card-text\\\">\\r\\n\\r\\n            <b>Name:</b>\\r\\n            <br />\\r\\n            {{this.worldById.name}}\\r\\n            <br />\\r\\n            <b>Description:</b>\\r\\n            <br />\\r\\n            {{this.worldById.description}}\\r\\n            <br />\\r\\n            <b>Season: </b>\\r\\n            <br />\\r\\n            {{this.worldById.season}}\\r\\n            <br />\\r\\n            <b>Available in ranked: </b>\\r\\n            <br />\\r\\n            {{this.worldById.availableInRanked}}\\r\\n            <br />\\r\\n        </p>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer text-center\\\">\\r\\n        <button *ngIf=\\\"_authService.loggedIn()\\\" [routerLink]=\\\"['/map/edit', this.worldById._id]\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-warning float-left btn-season\\\">Edit</button>\\r\\n        <button *ngIf=\\\"_authService.loggedIn()\\\" [routerLink]=\\\"['/map/delete', this.worldById._id]\\\" type=\\\"button\\\"\\r\\n        class=\\\"btn btn-danger float-right btn-season\\\">Delete</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n \"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { World } from '../world.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SiegeService } from 'src/app/siege.service';\r\nimport { AuthService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-world-with-id',\r\n  templateUrl: './world-with-id.component.html',\r\n  styleUrls: ['./world-with-id.component.css']\r\n})\r\nexport class WorldWithIdComponent implements OnInit {\r\n\r\n  @Input() world : World\r\n  worldById : World;\r\n  private sub: any;\r\n  \r\n  constructor( \r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private _siegeService: SiegeService,\r\n    private _authService: AuthService) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      console.log(params['id']);\r\n      return this._siegeService.getWorldById(params.id)\r\n      .subscribe(\r\n        res => {\r\n          this.worldById = res;\r\n          console.log('res: ' + res);\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n}\r\n","export class World {\r\n    constructor(public _id?: String, public name?:String, public description?: String, public availableInRanked?: Boolean) {}\r\n}   ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmxkcy93b3JsZHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card mt-5\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <a routerLink=\\\"/maps/create\\\" class=\\\"btn btn-success createbutton\\\">Niewe Map aanmaken</a>\\r\\n        \\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"row mt-5\\\">\\r\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let world of worlds\\\" [class.selected] = \\\"world === selectedWorld\\\">\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          {{world.name}}\\r\\n        </h5>\\r\\n       \\r\\n        <button [routerLink]=\\\"['/map', world._id]\\\" routerLinkActive=\\\"active\\\" type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-primary btn-season\\\">View</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-world-detail [world]=\\\"selectedWorld\\\"></app-world-detail>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SiegeService } from '../siege.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { World } from './world.model';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-worlds',\r\n  templateUrl: './worlds.component.html',\r\n  styleUrls: ['./worlds.component.css']\r\n})\r\nexport class WorldsComponent implements OnInit {\r\n\r\n  worlds = []\r\n  selectedWorld : World;\r\n  constructor(private _siegeService: SiegeService, private _authService : AuthService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this._siegeService.getWorlds()\r\n    .subscribe(\r\n      res => this.worlds = res,\r\n      err => console.log\r\n    )\r\n  }\r\n\r\n  onSelect(world: World): void {\r\n    this.selectedWorld = world;\r\n  }\r\n\r\n  refreshWorlds() {\r\n    return this._siegeService.getWorlds()\r\n    .subscribe(\r\n      res => this.worlds = res,\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  serverUrl: 'https://siegewiki.herokuapp.com',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}